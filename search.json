[
  {
    "objectID": "2023 - Archive/4-Dec23.html",
    "href": "2023 - Archive/4-Dec23.html",
    "title": "2023 Dec 7th – UQ PUG 4",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general information for details about who we are and what we do.",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Dec 7<sup>th</sup> -- UQ PUG 4"
    ]
  },
  {
    "objectID": "2023 - Archive/4-Dec23.html#structure",
    "href": "2023 - Archive/4-Dec23.html#structure",
    "title": "2023 Dec 7th – UQ PUG 4",
    "section": "Structure",
    "text": "Structure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Dec 7<sup>th</sup> -- UQ PUG 4"
    ]
  },
  {
    "objectID": "2023 - Archive/4-Dec23.html#mailing-list",
    "href": "2023 - Archive/4-Dec23.html#mailing-list",
    "title": "2023 Dec 7th – UQ PUG 4",
    "section": "Mailing list",
    "text": "Mailing list\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Dec 7<sup>th</sup> -- UQ PUG 4"
    ]
  },
  {
    "objectID": "2023 - Archive/4-Dec23.html#training-resources",
    "href": "2023 - Archive/4-Dec23.html#training-resources",
    "title": "2023 Dec 7th – UQ PUG 4",
    "section": "Training Resources",
    "text": "Training Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Dec 7<sup>th</sup> -- UQ PUG 4"
    ]
  },
  {
    "objectID": "2023 - Archive/4-Dec23.html#introduce-yourself",
    "href": "2023 - Archive/4-Dec23.html#introduce-yourself",
    "title": "2023 Dec 7th – UQ PUG 4",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nKaren\nUQ Busines School\nto learn\n\n\nCameron\nUQ Library\nTo help and learn\n\n\n\n\n\n\n\nPo-Yen\nUQ Business school\nGet some help and learn I guess :)\n\n\n\n\n\n\n\nSagar\nBangladesh\nLearn Python",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Dec 7<sup>th</sup> -- UQ PUG 4"
    ]
  },
  {
    "objectID": "2023 - Archive/4-Dec23.html#questions",
    "href": "2023 - Archive/4-Dec23.html#questions",
    "title": "2023 Dec 7th – UQ PUG 4",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put them in a markdown cell, with any code you’d like us to run in a Python cell.\n\nQuestion 1 - Question - Name\nQuestion about the CycleGAN architecture. Po-Yen\n\n#I don't get the part under \"try\" and the part of \"except\"\n#I also find that onece I load TPU, I have to wait to use this engine\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport tensorflow_addons as tfa\n\nfrom kaggle_datasets import KaggleDatasets\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ntry:\n    tpu = tf.distribute.cluster_resolver.TPUClusterResolver()\n    print('Device:', tpu.master())\n    tf.config.experimental_connect_to_cluster(tpu)\n    tf.tpu.experimental.initialize_tpu_system(tpu)\n    strategy = tf.distribute.experimental.TPUStrategy(tpu)\nexcept:\n    strategy = tf.distribute.get_strategy()\nprint('Number of replicas:', strategy.num_replicas_in_sync)\n\nAUTOTUNE = tf.data.experimental.AUTOTUNE\n    \nprint(tf.__version__)\n\n\na = 5\n\ntry:\n    \"apple\"**2\nexcept ValueError:\n    print(\"We're inside the valueerror section\")\nexcept TypeError:\n    print(\"We're inside the typeerror section\")",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Dec 7<sup>th</sup> -- UQ PUG 4"
    ]
  },
  {
    "objectID": "2023 - Archive/2-Oct23.html",
    "href": "2023 - Archive/2-Oct23.html",
    "title": "2023 Oct 5th – UQ PUG 2",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general information for details about who we are and what we do.",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Oct 5<sup>th</sup> -- UQ PUG 2"
    ]
  },
  {
    "objectID": "2023 - Archive/2-Oct23.html#structure",
    "href": "2023 - Archive/2-Oct23.html#structure",
    "title": "2023 Oct 5th – UQ PUG 2",
    "section": "Structure",
    "text": "Structure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Oct 5<sup>th</sup> -- UQ PUG 2"
    ]
  },
  {
    "objectID": "2023 - Archive/2-Oct23.html#this-months-presentation",
    "href": "2023 - Archive/2-Oct23.html#this-months-presentation",
    "title": "2023 Oct 5th – UQ PUG 2",
    "section": "This month’s presentation",
    "text": "This month’s presentation\nhttps://forms.office.com/r/TTLGSAxS0k\nJoin us for an informative presentation that delves into the world of Python Integrated Development Environments (IDEs). In this session, we will compare and contrast five popular Python development environments: Spyder, PyCharm, Visual Studio Code (VSCode), Google Colab, and the trusty Command Prompt.\nhttps://www.meetup.com/beginners-python-machine-learning/",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Oct 5<sup>th</sup> -- UQ PUG 2"
    ]
  },
  {
    "objectID": "2023 - Archive/2-Oct23.html#introduce-yourself",
    "href": "2023 - Archive/2-Oct23.html#introduce-yourself",
    "title": "2023 Oct 5th – UQ PUG 2",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\n\n\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nLuke\nLibrary\nTo learn and attempt help\n\n\nMads\nEAIT\nAnalyse data and hopefully get some help doing that\n\n\nTaneesha\nSchool of the Environment: Conservation Science\nLearn python coding for ArcGIS\n\n\nCameron\nLibrary\nTo learn and help!\n\n\nNida\nSchool of Chemistry & Molecular Biosciences\nTo learn more about python to work on molec bio data\n\n\nNick Wiggins\nLibrary\nHere to help and mostly to learn\n\n\nAnnie\nSENV\nhere to ask all the questions!",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Oct 5<sup>th</sup> -- UQ PUG 2"
    ]
  },
  {
    "objectID": "2023 - Archive/2-Oct23.html#questions",
    "href": "2023 - Archive/2-Oct23.html#questions",
    "title": "2023 Oct 5th – UQ PUG 2",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put them in a markdown cell, with any code you’d like us to run in a Python cell.\n\nQuestion 1 - What are some “best practices” or the “correct” way of installing Python for the first time - Annie\nI frequently get “path” errors because I’m installed python somewhere and then the IDE can’t find the path to Python (I think), and many “hardcore” programmers don’t like Anaconda - they say it interferes with pip so what is the easiest both initially and later on down the line?\nNick - I’m going to try installing Python and vsCode using these instructions (https://github.com/Oracen/python-intro), and put all the files into one folder as Luke suggested\n\n## Code for Q1\n\n\n\nQuestion 2 - Question - Nida\nIn Spyder, sometimes when we want to import a module (i.e a .py file that contains certain functions/dictionary), it gives this error:\nModuleNotFoundError: No module named ‘translate’\nis this problem related to whether the file that we are trying to import is not saved in our working directory?\nHow do we set that our working directory is in the place where we saved our file that we want to import as a module?\nI saw an Icon called “browse a working directory” in the top right of the Spyder, is this how we set our working directory? Or do we have to do sth else to change our working directory?\nThank you so much\n\n# Access the system (using the module sys)\nimport sys\n\n# This will display where you can put your modules\nprint(sys.path)\n\n# This will add another location to the path (another folder where you can load modules)\nsys.path = sys.path + ['Location of your modules']\n\nhttps://www.w3schools.com/python/python_ref_keywords.asp avoid to name your files or variables with these words or python will get confused!\n\nLuke attempting to find answers\nThe ‘translate’ module is causing a conflict - https://pypi.org/project/translate/\nThis says you can do pip install to file path? - https://stackoverflow.com/questions/63790682/importing-custom-modules-py-files-into-virtual-environment#:~:text=You%20can%20create%20a%20setup.py%2C%20then%20install%20this,a%20module%20by%20pip%20pip%20install%20-e%20%2Fpath%2Fto%2Ffolder\n\npip install translate\n\n\n\n\nQuestion 3 - should you always be using venv (virtual environments) for every new project? - Annie\nwhat are the pros and cons of venv?\n\n## Code for Q3\n\n\n\nQuestion 4 - where does one find packages available in Notable? e.g. google colab doesnt have all packages - Annie\nAdd more details here\n\n## Code for Q4\nhelp('modules')\n\n\n\nQuestion 5 - Why does it sometimes take so long to use google collab? (i.e when we have to re-run everything again) is it bcs it is run the server which is different from server that we use to run our code with other environment? do we have place to store our .csv file?\n\n## Code for Q5\n\n\n\nQuestion 6 - How do I fix an IndexError: list index out of range? -Taneesha\nWriting python code in ArcGIS to loop through a number of geoprocessing tools\n\nnumbers = [0,1,2]\n\nletters = [\"a\",\"b\"]\n\nfor i in numbers:\n    print(letters[i])\n\nQuestion 7 - do we have tools for running it line by line in spyder?\nLuke you mentioned you were interested in this - feel free to delete once you’ve seen this. https://www.deeplearning.ai/short-courses/langchain-chat-with-your-data/\nThanks Jason. I have a playlist of YTs to work my way through currently. Found a channel where one of the videos I had some success with. This video - https://www.youtube.com/watch?v=wrD-fZvT6UI. So am trying more of his tutorials. Trying to do it without OpenAI API",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Oct 5<sup>th</sup> -- UQ PUG 2"
    ]
  },
  {
    "objectID": "2024 - Archive/14-Dec24.html",
    "href": "2024 - Archive/14-Dec24.html",
    "title": "2024 Dec 5th – UQ PUG 14",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Dec 5<sup>th</sup> -- UQ PUG 14"
    ]
  },
  {
    "objectID": "2024 - Archive/14-Dec24.html#overview",
    "href": "2024 - Archive/14-Dec24.html#overview",
    "title": "2024 Dec 5th – UQ PUG 14",
    "section": "Overview",
    "text": "Overview\nWelcome to the last PUG for the year! One final drop in session and catchup before Christmas.\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nWe have moved from a mailing list to a Teams channel! Opt-in to receive PUG updates\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Dec 5<sup>th</sup> -- UQ PUG 14"
    ]
  },
  {
    "objectID": "2024 - Archive/14-Dec24.html#introduce-yourself",
    "href": "2024 - Archive/14-Dec24.html#introduce-yourself",
    "title": "2024 Dec 5th – UQ PUG 14",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron\nUQ Library & Physics\nTo share and learn",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Dec 5<sup>th</sup> -- UQ PUG 14"
    ]
  },
  {
    "objectID": "2024 - Archive/14-Dec24.html#questions",
    "href": "2024 - Archive/14-Dec24.html#questions",
    "title": "2024 Dec 5th – UQ PUG 14",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nQuestion 1 | Person\n\n# Put any code you'd like to run here!\n\nround(x := 5.6)\n\nx + 2\n\n7.6\n\n\n\nAnswers\n\n\n\nQuestion 2 | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here! CTRL + ENTER will run the cell\n\n\nAnswers\n\n\n\nQuestion 3: Question | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\n\n\nQuestion 4: Question | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\n\n\nQuestion 5: Question | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Dec 5<sup>th</sup> -- UQ PUG 14"
    ]
  },
  {
    "objectID": "2024 - Archive/12-Oct24.html",
    "href": "2024 - Archive/12-Oct24.html",
    "title": "2024 Oct 3rd – UQ PUG 12",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Oct 3<sup>rd</sup> -- UQ PUG 12"
    ]
  },
  {
    "objectID": "2024 - Archive/12-Oct24.html#overview",
    "href": "2024 - Archive/12-Oct24.html#overview",
    "title": "2024 Oct 3rd – UQ PUG 12",
    "section": "Overview",
    "text": "Overview\nThis month we will be discussing Version Control with GitHub, as well as testing out VSCode Liveshare!\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nWe have moved from a mailing list to a Teams channel! Opt-in to receive PUG updates\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Oct 3<sup>rd</sup> -- UQ PUG 12"
    ]
  },
  {
    "objectID": "2024 - Archive/12-Oct24.html#introduce-yourself",
    "href": "2024 - Archive/12-Oct24.html#introduce-yourself",
    "title": "2024 Oct 3rd – UQ PUG 12",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nPrakash Rai\nFrom home\nJust learning from scratch\n\n\nStéphane Guillou\nUQ Library\nFor fun!\n\n\nIsmael Khan\nUQ GET\nHelp and learn\n\n\nCameron West\nUQ Library / SMP\nTo help (and learn)\n\n\nLuke\nLibrary\nTo learn and try to help\n\n\nShaochen\nUQ GET\nLearn and help\n\n\nElizabeth Zhu",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Oct 3<sup>rd</sup> -- UQ PUG 12"
    ]
  },
  {
    "objectID": "2024 - Archive/12-Oct24.html#questions",
    "href": "2024 - Archive/12-Oct24.html#questions",
    "title": "2024 Oct 3rd – UQ PUG 12",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nQuestion 1: What do we use Python for? | Ismael\n\nLuke: finds genAI to be more helpful with Python than R. Usually use Python and R for data processing.\nCam: graphing with matplotlib for the most part.\nIsmael: matplotlib, pandas, numpy…\nPrakash: wants to learn more about both R and Python\nElizabeth: text analysis, deep learning, machine learning, sentiment analysis… in the communication between industry and investors\n\n\n\n# Put any code you'd like to run here!\n\n2\n\n\n\n\nQuestion 2: Python for trading/investments? | Elizabeth\n\nModule for creating User Interfaces: PySide6, which uses Qt.\n\nhttps://pypi.org/project/PySide6/\nsimilar to PyQt\n\n\n\n# Put any code you'd like to run here! CTRL + ENTER will run the cell\n\n\n\nNext month: PUG at ResBaz!\nWe will be at ResBaz QLD 2024, at ACU, for a larger meetup with other communities of practice! Please join us on Thursday the 7th of October at 11 am.\n\nWebsite: https://resbaz.github.io/resbaz2024qld/\nVolunteer: https://docs.google.com/forms/d/e/1FAIpQLSd689WEt6ZJPmd-833S7DaHjthJlvcNmm6qSfePuqnxiyrg6Q/viewform\n\n\n# Put any code you'd like to run here!\n\n\n\nQuestion 4: Question | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\n\nQuestion 5: Question | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Oct 3<sup>rd</sup> -- UQ PUG 12"
    ]
  },
  {
    "objectID": "2024 - Archive/08-May24.html",
    "href": "2024 - Archive/08-May24.html",
    "title": "2024 May 2nd – UQ PUG 8",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info above for how we work and what we do. Below you’ll find the details of this month’s gathering, and below that last month’s.\n\n\n\n\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\n\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.\n\n\n\nWe offer Python training sessions and resources, you can find our introductory guide here.\n\n\n\n\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nJulia\nUQ HABS\nLearn & meet python users\n\n\nCameron\nUQ Library / SMP\nHelp and learn!",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 May 2<sup>nd</sup> -- UQ PUG 8"
    ]
  },
  {
    "objectID": "2024 - Archive/08-May24.html#overview",
    "href": "2024 - Archive/08-May24.html#overview",
    "title": "2024 May 2nd – UQ PUG 8",
    "section": "",
    "text": "We start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\n\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.\n\n\n\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 May 2<sup>nd</sup> -- UQ PUG 8"
    ]
  },
  {
    "objectID": "2024 - Archive/08-May24.html#introduce-yourself",
    "href": "2024 - Archive/08-May24.html#introduce-yourself",
    "title": "2024 May 2nd – UQ PUG 8",
    "section": "",
    "text": "What’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nJulia\nUQ HABS\nLearn & meet python users\n\n\nCameron\nUQ Library / SMP\nHelp and learn!",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 May 2<sup>nd</sup> -- UQ PUG 8"
    ]
  },
  {
    "objectID": "2024 - Archive/06-Mar24.html",
    "href": "2024 - Archive/06-Mar24.html",
    "title": "2024 Mar 7th – UQ PUG 6",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general information for details about who we are and what we do.\n\n\n\n\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\n\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.\n\n\n\nWe offer Python training sessions and resources, you can find our introductory guide here.\n\n\n\n\nToday we looked at the popular plotting package matplotlib. You can find the Jupyter notebook we worked from on our GitHub page.\n\n\n\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nNick Wiggins\nUQ Library\nHere to help (and learn!)\n\n\nCameron West\nUQ Library / SMP\nTo learn and help\n\n\n\n\n\n\n\nDennis\nSMP\nTo learn and get help\n\n\nKaren Fang\nUQ BEL\nTo learn\n\n\nValentina\nUQ Library\nHere to say hello!\n\n\nTheophilus Mensah\nQAAFI\nhere to learn\n\n\nY Allo\nSMP\nLearn this sofware\n\n\nSenn Oon\nUQ Library\nPlacement student observing!\n\n\nJay\nUQ\nto learn python\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\n\nwhen to use tuple and when to use list?\n## when we create a table using pandas DataFrame, we can create a tuple like below:\ndf = pd.DataFrame(columns=(\"number\", \"name\", \"major\"))\n\n## or a list like below:\ndf = pd.DataFrame(columns=[\"number\", \"name\", \"major\"])\n\n## so in what occassion are we using tuple & in what occassion are we using list? Thanks so much\n\n\n\nWhen you need to ensure that the elements shouldn’t change. Tuples cannot be edited (immutable), you can’t change their elements, so only when this is necessary.\nThey can be faster, since they are a constant size – according to StackOverflow\n\n\n\n\n\n\nI have tried matplotlib for making a single line graph, but I still don’t know how to use it for working with multiple data as follows\n# I have these Optical Density in 750nm data that show the growth curve for each species\nOD750_data = [[\"Species\",\"8 Dec 2023\",\"15 Dec 2023\", \"18 Dec 2023\"],\n            [\"Nannochloropsis\", 0.2615, 1.0385, 0.822],\n            [\"Phaeodactylum\", 0.208, 0.603, 0.499],\n            [\"Tisochrysis\", 0.1015, 0.135, 0.1265]]\ntable1 = tabulate(OD750_data)\nprint(table1)\n\ntable2 = tabulate(OD750_data,headers='firstrow')\nprint(table2)\n\n# how do I turn this table into line graphs with 3 growth curves for 3 species?\n\n\n\nGreat question Nida. Some of the difficulty lies in the data shape, the easiest way to use data for these things is in long form. I’ve used a few steps below\n\nTurn it into a pandas dataframe\nTransform it into three columns and nine rows with pd.melt (long form). Run print(OD750_data) to see this\nPlot each line by subsetting OD750_data[\"Species\"] ==. ```python import pandas as pd",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Mar 7<sup>th</sup> -- UQ PUG 6"
    ]
  },
  {
    "objectID": "2024 - Archive/06-Mar24.html#overview",
    "href": "2024 - Archive/06-Mar24.html#overview",
    "title": "2024 Mar 7th – UQ PUG 6",
    "section": "",
    "text": "We start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\n\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.\n\n\n\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Mar 7<sup>th</sup> -- UQ PUG 6"
    ]
  },
  {
    "objectID": "2024 - Archive/06-Mar24.html#todays-presentation",
    "href": "2024 - Archive/06-Mar24.html#todays-presentation",
    "title": "2024 Mar 7th – UQ PUG 6",
    "section": "",
    "text": "Today we looked at the popular plotting package matplotlib. You can find the Jupyter notebook we worked from on our GitHub page.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Mar 7<sup>th</sup> -- UQ PUG 6"
    ]
  },
  {
    "objectID": "2024 - Archive/06-Mar24.html#introduce-yourself",
    "href": "2024 - Archive/06-Mar24.html#introduce-yourself",
    "title": "2024 Mar 7th – UQ PUG 6",
    "section": "",
    "text": "What’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nNick Wiggins\nUQ Library\nHere to help (and learn!)\n\n\nCameron West\nUQ Library / SMP\nTo learn and help\n\n\n\n\n\n\n\nDennis\nSMP\nTo learn and get help\n\n\nKaren Fang\nUQ BEL\nTo learn\n\n\nValentina\nUQ Library\nHere to say hello!\n\n\nTheophilus Mensah\nQAAFI\nhere to learn\n\n\nY Allo\nSMP\nLearn this sofware\n\n\nSenn Oon\nUQ Library\nPlacement student observing!\n\n\nJay\nUQ\nto learn python",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Mar 7<sup>th</sup> -- UQ PUG 6"
    ]
  },
  {
    "objectID": "2024 - Archive/06-Mar24.html#questions",
    "href": "2024 - Archive/06-Mar24.html#questions",
    "title": "2024 Mar 7th – UQ PUG 6",
    "section": "",
    "text": "If you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\n\nwhen to use tuple and when to use list?\n## when we create a table using pandas DataFrame, we can create a tuple like below:\ndf = pd.DataFrame(columns=(\"number\", \"name\", \"major\"))\n\n## or a list like below:\ndf = pd.DataFrame(columns=[\"number\", \"name\", \"major\"])\n\n## so in what occassion are we using tuple & in what occassion are we using list? Thanks so much\n\n\n\nWhen you need to ensure that the elements shouldn’t change. Tuples cannot be edited (immutable), you can’t change their elements, so only when this is necessary.\nThey can be faster, since they are a constant size – according to StackOverflow\n\n\n\n\n\n\nI have tried matplotlib for making a single line graph, but I still don’t know how to use it for working with multiple data as follows\n# I have these Optical Density in 750nm data that show the growth curve for each species\nOD750_data = [[\"Species\",\"8 Dec 2023\",\"15 Dec 2023\", \"18 Dec 2023\"],\n            [\"Nannochloropsis\", 0.2615, 1.0385, 0.822],\n            [\"Phaeodactylum\", 0.208, 0.603, 0.499],\n            [\"Tisochrysis\", 0.1015, 0.135, 0.1265]]\ntable1 = tabulate(OD750_data)\nprint(table1)\n\ntable2 = tabulate(OD750_data,headers='firstrow')\nprint(table2)\n\n# how do I turn this table into line graphs with 3 growth curves for 3 species?\n\n\n\nGreat question Nida. Some of the difficulty lies in the data shape, the easiest way to use data for these things is in long form. I’ve used a few steps below\n\nTurn it into a pandas dataframe\nTransform it into three columns and nine rows with pd.melt (long form). Run print(OD750_data) to see this\nPlot each line by subsetting OD750_data[\"Species\"] ==. ```python import pandas as pd",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Mar 7<sup>th</sup> -- UQ PUG 6"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/20-Jul25.html",
    "href": "2025 - Current notebooks/unused/20-Jul25.html",
    "title": "2025 July 3rd – UQ PUG 20",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 July 3<sup>rd</sup> -- UQ PUG 20"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/20-Jul25.html#overview",
    "href": "2025 - Current notebooks/unused/20-Jul25.html#overview",
    "title": "2025 July 3rd – UQ PUG 20",
    "section": "Overview",
    "text": "Overview\nStay tuned for details about this month’s presentation…\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nWe have moved from a mailing list to a Teams channel! Opt-in to receive PUG updates\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 July 3<sup>rd</sup> -- UQ PUG 20"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/20-Jul25.html#introduce-yourself",
    "href": "2025 - Current notebooks/unused/20-Jul25.html#introduce-yourself",
    "title": "2025 July 3rd – UQ PUG 20",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron\nUQ Library & SMP\nTo share and learn",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 July 3<sup>rd</sup> -- UQ PUG 20"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/20-Jul25.html#questions",
    "href": "2025 - Current notebooks/unused/20-Jul25.html#questions",
    "title": "2025 July 3rd – UQ PUG 20",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 July 3<sup>rd</sup> -- UQ PUG 20"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/18-May25.html",
    "href": "2025 - Current notebooks/unused/18-May25.html",
    "title": "2025 May 1st – UQ PUG 18",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 May 1<sup>st</sup> -- UQ PUG 18"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/18-May25.html#overview",
    "href": "2025 - Current notebooks/unused/18-May25.html#overview",
    "title": "2025 May 1st – UQ PUG 18",
    "section": "Overview",
    "text": "Overview\nIn this PUG we’ll be discussing Python installations/environments/IDEs.\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nWe have moved from a mailing list to a Teams channel! Opt-in to receive PUG updates\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 May 1<sup>st</sup> -- UQ PUG 18"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/18-May25.html#introduce-yourself",
    "href": "2025 - Current notebooks/unused/18-May25.html#introduce-yourself",
    "title": "2025 May 1st – UQ PUG 18",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron\nUQ Library & SMP\nTo share and learn",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 May 1<sup>st</sup> -- UQ PUG 18"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/18-May25.html#questions",
    "href": "2025 - Current notebooks/unused/18-May25.html#questions",
    "title": "2025 May 1st – UQ PUG 18",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 May 1<sup>st</sup> -- UQ PUG 18"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/21-Sep25.html",
    "href": "2025 - Current notebooks/21-Sep25.html",
    "title": "2025 Sep 4th – UQ PUG 21",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Sep 4<sup>th</sup> -- UQ PUG 21"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/21-Sep25.html#overview",
    "href": "2025 - Current notebooks/21-Sep25.html#overview",
    "title": "2025 Sep 4th – UQ PUG 21",
    "section": "Overview",
    "text": "Overview\nWelcome to the September UQ PUG!. This month we’ll be discussing venv, Python’s virtual environment manager. It’s great and it’s simple and it’s complicated.\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nIf you’d like to receive regular updates and post questions during the month, join our Teams channel!\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Sep 4<sup>th</sup> -- UQ PUG 21"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/21-Sep25.html#introduce-yourself",
    "href": "2025 - Current notebooks/21-Sep25.html#introduce-yourself",
    "title": "2025 Sep 4th – UQ PUG 21",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nName\nOrganisation/School\nReason for coming",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Sep 4<sup>th</sup> -- UQ PUG 21"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/21-Sep25.html#questions",
    "href": "2025 - Current notebooks/21-Sep25.html#questions",
    "title": "2025 Sep 4th – UQ PUG 21",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Sep 4<sup>th</sup> -- UQ PUG 21"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/16-Mar25.html",
    "href": "2025 - Current notebooks/16-Mar25.html",
    "title": "2025 Mar 6th – UQ PUG 16",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Mar 6<sup>th</sup> -- UQ PUG 16"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/16-Mar25.html#overview",
    "href": "2025 - Current notebooks/16-Mar25.html#overview",
    "title": "2025 Mar 6th – UQ PUG 16",
    "section": "Overview",
    "text": "Overview\nWelcome to the second PUG for the year! This month we’ll look go through the most popular Python packages (by download) and explore their most useful features.\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nWe have moved from a mailing list to a Teams channel! Opt-in to receive PUG updates\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Mar 6<sup>th</sup> -- UQ PUG 16"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/16-Mar25.html#introduce-yourself",
    "href": "2025 - Current notebooks/16-Mar25.html#introduce-yourself",
    "title": "2025 Mar 6th – UQ PUG 16",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron\nUQ Library & SMP\nTo share and learn\n\n\nJuddi\nSchool of Communication and Arts\n-\n\n\nDuncan\nSPPS\nTo learn more about Python\n\n\nElizabeth\n-\n-\n\n\nJohn\n-\n-\n\n\nTitus\n-\n-\n\n\nKrystie\n-\n-",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Mar 6<sup>th</sup> -- UQ PUG 16"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/16-Mar25.html#questions",
    "href": "2025 - Current notebooks/16-Mar25.html#questions",
    "title": "2025 Mar 6th – UQ PUG 16",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nAutomation packages | Duncan\nDo you have any ideas about which popular packages are useful for automation in windows?\n\n# To interact with the filesystem\nimport os\n\n# For copying/renaming/more complex operations\nimport shutil\n\n# To interact with spreadsheets\nimport pandas as pd\n\n# Folder full of spreadsheets\npath = r\"..\\Demonstrations\\top_modules\\spreadsheets\"\n\n# Returns a list of files at the specified folder\nfiles = os.listdir(path)\n\n# Looping will automate for you\nfor file in files:\n    full_path = os.path.join(path, file)\n\n    # Read in any file (using a 'with' means the file automatically closes)\n    with open(full_path) as f:\n        contents = f.read()\n\n    # Read in dataframes (e.g. .csv, .xlsx, see pd.read_... for the possibilities)\n    df = pd.read_csv(full_path)\n\n\nprint(f\"Using pandas' read_csv() function: \\n\\n{df}\")\nprint(f\"\\nUsing base python's open() and .read() functions: \\n\\n{contents[0:200]}\\n...\")\n\nUsing pandas' read_csv() function: \n\n       download_count        project\n0          1346601849          boto3\n1           670262655        urllib3\n2           609967137       botocore\n3           576250793       requests\n4           563169502        certifi\n...               ...            ...\n14995           25173        chilkat\n14996           25169       aioradio\n14997           25165        binilla\n14998           25160   testarchiver\n14999           25159  starlette-wtf\n\n[15000 rows x 2 columns]\n\nUsing base python's open() and .read() functions: \n\ndownload_count,project\n1346601849,boto3\n670262655,urllib3\n609967137,botocore\n576250793,requests\n563169502,certifi\n533963799,charset-normalizer\n515259652,setuptools\n512857052,idna\n492528430,grpcio-stat\n...\n\n\n\nAnswers\n\nSee code above\nAnswer 2\n…\n\n\n\n\nMatching company names | Elizabeth\nMatch names from data list\n\n# Before you start trying to use Python, try to write down by hand what the \n# algorithm would be.\n\n\nsentence = \"This is a long sentence with lots of words like Google, Rio and Tinto.\"\nprint(sentence)\n\n# Single string, single keyword:\nkeyword = \"Google\"\nmatched = keyword in sentence\n\nprint()\nprint(\"Single keyword\")\nprint(\"Is\", keyword, \"in my sentence?\", matched)\n\n# Single string, multiple keywords\nkeywords = [\"Google\", \"Amazon\"]\n\nprint()\nprint(\"Multiple keywords\")\n\nfor company in keywords:\n    matched = company in sentence\n    print(\"Is\", company, \"in my sentence?\", matched)\n\n\n# Single string, multiple companies with multiple keywords (note the nested keywords for RioTinto)\nkeywords = [[\"Google\"], [\"Amazon\"], [\"Rio-Tinto\", \"Rio\", \"Tinto\", \"RioTinto\", \"Rio Tinto\"]]\n\nprint()\nprint(\"Multiple companies with multiple keywords\")\nfor company in keywords:\n    for variant in company:  \n        matched = variant in sentence\n\n        if matched == True:\n            break\n    \n    print(\"Is\", company[0], \"in my sentence?\", matched)\n\nThis is a long sentence with lots of words like Google, Rio and Tinto.\n\nSingle keyword\nIs Google in my sentence? True\n\nMultiple keywords\nIs Google in my sentence? True\nIs Amazon in my sentence? False\n\nMultiple companies with multiple keywords\nIs Google in my sentence? True\nIs Amazon in my sentence? False\nIs Rio-Tinto in my sentence? True\n\n\n\n# Using string data\nimport pandas as pd\n\ndf = pd.read_csv(\"../Demonstrations/top_modules/spreadsheets/top-pypi-packages.csv\")\n\n# The column \"project\" is a string column\n\n# Let's make a list of keywords.\nkeywords = [\"boto\", \"py\"]\n\n# To check which entries match which keywords\nfor keyword in keywords:\n    matches = df[\"project\"].str.contains(keyword)\n    subset_with_keyword = df[matches == True]\n\n    print(\"The rows with\",keyword, \"are\")\n    print(subset_with_keyword)\n\nThe rows with boto are\n       download_count                             project\n0          1346601849                               boto3\n2           609967137                            botocore\n11          454054215                         aiobotocore\n554          16054951                         boto3-stubs\n566          15361139                      botocore-stubs\n...               ...                                 ...\n14971           25243      botocore-a-la-carte-greengrass\n14974           25236  botocore-a-la-carte-workspaces-web\n14977           25219       types-aiobotocore-securityhub\n14987           25185  types-aiobotocore-servicediscovery\n14991           25182     botocore-a-la-carte-iotsitewise\n\n[533 rows x 2 columns]\nThe rows with py are\n       download_count                        project\n12          453387776                python-dateutil\n15          381826344                          numpy\n16          360961023                         pyyaml\n23          283246117                       pydantic\n24          282364469                      pycparser\n...               ...                            ...\n14969           25252                pytest-splinter\n14972           25242    tencentcloud-sdk-python-acp\n14973           25241                        xrpl-py\n14984           25203               opening-hours-py\n14994           25174  tencentcloud-sdk-python-hasim\n\n[3275 rows x 2 columns]\n\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion 3: Is it possible using Phyton for Facebook data scraping? Particularly related to Posts and their interactions on public Facebook groups | Juddi\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\n# YOU COULD RUN INTO ISSUES AND GET BANNED WITH REQUESTS\nimport requests\n\nr = requests.get(\"https://www.facebook.com/groups/553828734993634/\")\n\ndata = r.content\n\n# MAYBE TRY SELENIUM (or the Python module)\n\n# Talk to Sam Hames\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion 5: Question | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Mar 6<sup>th</sup> -- UQ PUG 16"
    ]
  },
  {
    "objectID": "Demonstrations/notebooks/notebooks.html",
    "href": "Demonstrations/notebooks/notebooks.html",
    "title": "Jupyter notebooks",
    "section": "",
    "text": "The basics\n\nCells (MD vs Python)\nDemo plots\n\nWhat is a kernel? Changing kernel.\nPlatforms - Jupyter notebook vs lab, colab, github codespaces, VS code\nExporting / converting / sharing\n2 + 2\n\n4\nprint(\"Cell 2\")\n\nCell 2\nThe test is formatted based on special characters",
    "crumbs": [
      "About us",
      "Demonstrations",
      "Notebooks",
      "Jupyter notebooks"
    ]
  },
  {
    "objectID": "Demonstrations/notebooks/notebooks.html#heading-2",
    "href": "Demonstrations/notebooks/notebooks.html#heading-2",
    "title": "Jupyter notebooks",
    "section": "Heading 2",
    "text": "Heading 2\n\nHeading 3 …\nAsterisk for italics Two for bold Three for strong\n~tilde for strikethrough~\n\nfrom markdown import markdown\n\nmarkdown(\"**Boldtest**\")\n\n'&lt;p&gt;&lt;strong&gt;Boldtest&lt;/strong&gt;&lt;/p&gt;'",
    "crumbs": [
      "About us",
      "Demonstrations",
      "Notebooks",
      "Jupyter notebooks"
    ]
  },
  {
    "objectID": "Demonstrations/notebooks/notebooks.html#heading-2-1",
    "href": "Demonstrations/notebooks/notebooks.html#heading-2-1",
    "title": "Jupyter notebooks",
    "section": "Heading 2",
    "text": "Heading 2\n\nHeading 3 …\nAsterisk for italics Two for bold Three for strong\n~tilde for strikethrough~",
    "crumbs": [
      "About us",
      "Demonstrations",
      "Notebooks",
      "Jupyter notebooks"
    ]
  },
  {
    "objectID": "Demonstrations/notebooks/notebooks.html#maths-detour",
    "href": "Demonstrations/notebooks/notebooks.html#maths-detour",
    "title": "Jupyter notebooks",
    "section": "Maths detour",
    "text": "Maths detour\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nxs = np.linspace(-10,10,1000)\nys = np.sin(xs)\n\nplt.plot(xs, ys)",
    "crumbs": [
      "About us",
      "Demonstrations",
      "Notebooks",
      "Jupyter notebooks"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "UQ Python User Group",
    "section": "",
    "text": "Welcome to the UQ Python User Group (UQ PUG). We meet monthly, and our next gathering is on the 3rd of April. We meet in room 12-N109 (Central Library)."
  },
  {
    "objectID": "index.html#about-us",
    "href": "index.html#about-us",
    "title": "UQ Python User Group",
    "section": "About us",
    "text": "About us\n\nWho are we?\nUQ PUG is a gathering for Python users of any proficiency, to help each other solve problems, share resources and tips, discover new features and hang out as a friendly community.\n\n\nWhen do we meet?\n\nEvery first Thursday of the month from 10:00 am to 11:30am\nIn-person at UQ Central Library 12-N109\nFind the next gathering on the UQ Library Training Page and book in through StudentHub\nContact us at training@library.uq.edu.au for any questions or support"
  },
  {
    "objectID": "index.html#how-it-works",
    "href": "index.html#how-it-works",
    "title": "UQ Python User Group",
    "section": "How it works",
    "text": "How it works\nEach month, we gather at UQ Central Library to help solve each other’s problems and discover new features. We begin with a brief demonstration before diving into group discussion.\nBring along your python questions, problems, conundrums, opinions and victories to share with the group. We’ll try our best to help you out!"
  },
  {
    "objectID": "index.html#this-website",
    "href": "index.html#this-website",
    "title": "UQ Python User Group",
    "section": "This website",
    "text": "This website\nOn this website we contain the notebooks from our sessions (currently since Oct 24) and details from specific demonstrations."
  },
  {
    "objectID": "index.html#general-resources",
    "href": "index.html#general-resources",
    "title": "UQ Python User Group",
    "section": "General Resources",
    "text": "General Resources\nHere are a few links to some general resources.\n\nPython Documentation\nPyPI, the python package repository\nAnaconda, an environment manager with python applications (e.g. Spyder) available\nUQ Training Sessions\nLibrary training email - training@library.uq.edu.au\nOnline courses with LinkedIn Learning (use UQ credentials)\n\n\nDatasets\nWe’ve also got a few datasets to play with. These get used in our library training sessions:\n\n\n\nDataset\nDescription\n\n\n\n\nBMI data\nFake BMI data for five people.\n\n\nPlayers 2024\nA dataset of 2024 soccer players’ clubs, heights and ages.\n\n\nGapminder\nInternational GDP, life expectancy and population statistics.\n\n\n\nFor admin"
  },
  {
    "objectID": "Demonstrations/top_modules/top_modules.html",
    "href": "Demonstrations/top_modules/top_modules.html",
    "title": "The most popular Python modules",
    "section": "",
    "text": "According to PyPI’s most downloaded packages for February 2025\nThere’s a lot of boring, utility packages. Let’s import the top 15,000, and look at the first 15\nimport pandas as pd\ndf = pd.read_csv(\"spreadsheets/top-pypi-packages.csv\")\ndf.head(15)\n\n\n\n\n\n\n\n\ndownload_count\nproject\n\n\n\n\n0\n1346601849\nboto3\n\n\n1\n670262655\nurllib3\n\n\n2\n609967137\nbotocore\n\n\n3\n576250793\nrequests\n\n\n4\n563169502\ncertifi\n\n\n5\n533963799\ncharset-normalizer\n\n\n6\n515259652\nsetuptools\n\n\n7\n512857052\nidna\n\n\n8\n492528430\ngrpcio-status\n\n\n9\n479677890\ntyping-extensions\n\n\n10\n474695177\npackaging\n\n\n11\n454054215\naiobotocore\n\n\n12\n453387776\npython-dateutil\n\n\n13\n415989804\ns3transfer\n\n\n14\n404306024\nsix\nBORING. For reference\ncount = df.head(15)[\"download_count\"].sum()\n\nprint(f\"Together, these packages been downloaded {count} times in the last MONTH. That's 8.5 billion downloads!\")\n\nTogether, these packages been downloaded 8502971755 times in the last MONTH. That's 8.5 billion downloads!\nIt’s worth pointing out that a lot of these downloads could be automatic - scripts running and restarting, creating virtual environments every time etc.\nSo far, the only ones I want to look at are urllib3/requests. Let’s look to the next 15\ndf[15:31]\n\n\n\n\n\n\n\n\ndownload_count\nproject\n\n\n\n\n15\n381826344\nnumpy\n\n\n16\n360961023\npyyaml\n\n\n17\n359178671\ns3fs\n\n\n18\n355011082\npip\n\n\n19\n336751364\nfsspec\n\n\n20\n325104210\ngoogle-api-core\n\n\n21\n309681352\ncryptography\n\n\n22\n287715421\ncffi\n\n\n23\n283246117\npydantic\n\n\n24\n282364469\npycparser\n\n\n25\n278848477\npandas\n\n\n26\n276988719\nattrs\n\n\n27\n262452647\nmarkupsafe\n\n\n28\n260586799\nrsa\n\n\n29\n252369285\npyasn1\n\n\n30\n251786378\nwheel\nAha! Here’s some more.\nA bit more variety! Today, we’ll look at the following packages from this top-30 list, in order:",
    "crumbs": [
      "About us",
      "Demonstrations",
      "Top Modules",
      "The most popular Python modules"
    ]
  },
  {
    "objectID": "Demonstrations/top_modules/top_modules.html#requests",
    "href": "Demonstrations/top_modules/top_modules.html#requests",
    "title": "The most popular Python modules",
    "section": "requests",
    "text": "requests\nThe requests package lets you send HTTP requests. Typically, these are GET, for getting things, and POST, for sending them.\n\nimport requests\n\nr = requests.get(\"https://uqpug.github.io/\")\nr\n\n&lt;Response [200]&gt;\n\n\nEvery HTTP request gets a status response. The code 200 means OK, so “&lt;Response [200]&gt;” means it worked.\nOur response has a lot of attributes. The main one is r.text\n\nNote - if you’re pulling from an API, usually you’ll get JSON code in response. Don’t use r.text there, use r.json().\n\n\nr.text\n\n'&lt;!DOCTYPE html&gt;\\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\"&gt;&lt;head&gt;\\n\\n&lt;meta charset=\"utf-8\"&gt;\\n&lt;meta name=\"generator\" content=\"quarto-1.6.42\"&gt;\\n\\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\"&gt;\\n\\n\\n&lt;title&gt;UQ Python User Group (UQ PUG) – UQPUG (Python User Group)&lt;/title&gt;\\n&lt;style&gt;\\ncode{white-space: pre-wrap;}\\nspan.smallcaps{font-variant: small-caps;}\\ndiv.columns{display: flex; gap: min(4vw, 1.5em);}\\ndiv.column{flex: auto; overflow-x: auto;}\\ndiv.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\\nul.task-list{list-style: none;}\\nul.task-list li input[type=\"checkbox\"] {\\n  width: 0.8em;\\n  margin: 0 0.8em 0.2em -1em; /* quarto-specific, see https://github.com/quarto-dev/quarto-cli/issues/4556 */ \\n  vertical-align: middle;\\n}\\n&lt;/style&gt;\\n\\n\\n&lt;script src=\"site_libs/quarto-nav/quarto-nav.js\"&gt;&lt;/script&gt;\\n&lt;script src=\"site_libs/quarto-nav/headroom.min.js\"&gt;&lt;/script&gt;\\n&lt;script src=\"site_libs/clipboard/clipboard.min.js\"&gt;&lt;/script&gt;\\n&lt;script src=\"site_libs/quarto-search/autocomplete.umd.js\"&gt;&lt;/script&gt;\\n&lt;script src=\"site_libs/quarto-search/fuse.min.js\"&gt;&lt;/script&gt;\\n&lt;script src=\"site_libs/quarto-search/quarto-search.js\"&gt;&lt;/script&gt;\\n&lt;meta name=\"quarto:offset\" content=\"./\"&gt;\\n&lt;script src=\"site_libs/quarto-html/quarto.js\"&gt;&lt;/script&gt;\\n&lt;script src=\"site_libs/quarto-html/popper.min.js\"&gt;&lt;/script&gt;\\n&lt;script src=\"site_libs/quarto-html/tippy.umd.min.js\"&gt;&lt;/script&gt;\\n&lt;script src=\"site_libs/quarto-html/anchor.min.js\"&gt;&lt;/script&gt;\\n&lt;link href=\"site_libs/quarto-html/tippy.css\" rel=\"stylesheet\"&gt;\\n&lt;link href=\"site_libs/quarto-html/quarto-syntax-highlighting-2f5df379a58b258e96c21c0638c20c03.css\" rel=\"stylesheet\" id=\"quarto-text-highlighting-styles\"&gt;\\n&lt;script src=\"site_libs/bootstrap/bootstrap.min.js\"&gt;&lt;/script&gt;\\n&lt;link href=\"site_libs/bootstrap/bootstrap-icons.css\" rel=\"stylesheet\"&gt;\\n&lt;link href=\"site_libs/bootstrap/bootstrap-a352ab7406acfd56ea2326799fe2b2a3.min.css\" rel=\"stylesheet\" append-hash=\"true\" id=\"quarto-bootstrap\" data-mode=\"light\"&gt;\\n&lt;script id=\"quarto-search-options\" type=\"application/json\"&gt;{\\n  \"location\": \"navbar\",\\n  \"copy-button\": false,\\n  \"collapse-after\": 3,\\n  \"panel-placement\": \"end\",\\n  \"type\": \"overlay\",\\n  \"limit\": 50,\\n  \"keyboard-shortcut\": [\\n    \"f\",\\n    \"/\",\\n    \"s\"\\n  ],\\n  \"show-item-context\": false,\\n  \"language\": {\\n    \"search-no-results-text\": \"No results\",\\n    \"search-matching-documents-text\": \"matching documents\",\\n    \"search-copy-link-title\": \"Copy link to search\",\\n    \"search-hide-matches-text\": \"Hide additional matches\",\\n    \"search-more-match-text\": \"more match in this document\",\\n    \"search-more-matches-text\": \"more matches in this document\",\\n    \"search-clear-button-title\": \"Clear\",\\n    \"search-text-placeholder\": \"\",\\n    \"search-detached-cancel-button-title\": \"Cancel\",\\n    \"search-submit-button-title\": \"Submit\",\\n    \"search-label\": \"Search\"\\n  }\\n}&lt;/script&gt;\\n\\n\\n&lt;/head&gt;\\n\\n&lt;body class=\"nav-sidebar floating nav-fixed\"&gt;\\n\\n&lt;div id=\"quarto-search-results\"&gt;&lt;/div&gt;\\n  &lt;header id=\"quarto-header\" class=\"headroom fixed-top\"&gt;\\n    &lt;nav class=\"navbar navbar-expand-lg \" data-bs-theme=\"dark\"&gt;\\n      &lt;div class=\"navbar-container container-fluid\"&gt;\\n      &lt;div class=\"navbar-brand-container mx-auto\"&gt;\\n    &lt;a class=\"navbar-brand\" href=\"./index.html\"&gt;\\n    &lt;span class=\"navbar-title\"&gt;UQPUG (Python User Group)&lt;/span&gt;\\n    &lt;/a&gt;\\n  &lt;/div&gt;\\n        &lt;div class=\"quarto-navbar-tools tools-end\"&gt;\\n&lt;/div&gt;\\n          &lt;div id=\"quarto-search\" class=\"\" title=\"Search\"&gt;&lt;/div&gt;\\n      &lt;/div&gt; &lt;!-- /container-fluid --&gt;\\n    &lt;/nav&gt;\\n  &lt;nav class=\"quarto-secondary-nav\"&gt;\\n    &lt;div class=\"container-fluid d-flex\"&gt;\\n      &lt;button type=\"button\" class=\"quarto-btn-toggle btn\" data-bs-toggle=\"collapse\" role=\"button\" data-bs-target=\".quarto-sidebar-collapse-item\" aria-controls=\"quarto-sidebar\" aria-expanded=\"false\" aria-label=\"Toggle sidebar navigation\" onclick=\"if (window.quartoToggleHeadroom) { window.quartoToggleHeadroom(); }\"&gt;\\n        &lt;i class=\"bi bi-layout-text-sidebar-reverse\"&gt;&lt;/i&gt;\\n      &lt;/button&gt;\\n        &lt;nav class=\"quarto-page-breadcrumbs\" aria-label=\"breadcrumb\"&gt;&lt;ol class=\"breadcrumb\"&gt;&lt;li class=\"breadcrumb-item\"&gt;&lt;a href=\"./index.html\"&gt;General information&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/nav&gt;\\n        &lt;a class=\"flex-grow-1\" role=\"navigation\" data-bs-toggle=\"collapse\" data-bs-target=\".quarto-sidebar-collapse-item\" aria-controls=\"quarto-sidebar\" aria-expanded=\"false\" aria-label=\"Toggle sidebar navigation\" onclick=\"if (window.quartoToggleHeadroom) { window.quartoToggleHeadroom(); }\"&gt;      \\n        &lt;/a&gt;\\n    &lt;/div&gt;\\n  &lt;/nav&gt;\\n&lt;/header&gt;\\n&lt;!-- content --&gt;\\n&lt;div id=\"quarto-content\" class=\"quarto-container page-columns page-rows-contents page-layout-article page-navbar\"&gt;\\n&lt;!-- sidebar --&gt;\\n  &lt;nav id=\"quarto-sidebar\" class=\"sidebar collapse collapse-horizontal quarto-sidebar-collapse-item sidebar-navigation floating overflow-auto\"&gt;\\n    &lt;div class=\"sidebar-menu-container\"&gt; \\n    &lt;ul class=\"list-unstyled mt-1\"&gt;\\n        &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./index.html\" class=\"sidebar-item-text sidebar-link active\"&gt;\\n &lt;span class=\"menu-text\"&gt;General information&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n        &lt;li class=\"sidebar-item sidebar-item-section\"&gt;\\n      &lt;div class=\"sidebar-item-container\"&gt; \\n            &lt;a class=\"sidebar-item-text sidebar-link text-start\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-1\" role=\"navigation\" aria-expanded=\"true\"&gt;\\n &lt;span class=\"menu-text\"&gt;Demonstrations&lt;/span&gt;&lt;/a&gt;\\n          &lt;a class=\"sidebar-item-toggle text-start\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-1\" role=\"navigation\" aria-expanded=\"true\" aria-label=\"Toggle section\"&gt;\\n            &lt;i class=\"bi bi-chevron-right ms-2\"&gt;&lt;/i&gt;\\n          &lt;/a&gt; \\n      &lt;/div&gt;\\n      &lt;ul id=\"quarto-sidebar-section-1\" class=\"collapse list-unstyled sidebar-section depth1 show\"&gt;  \\n          &lt;li class=\"sidebar-item sidebar-item-section\"&gt;\\n      &lt;div class=\"sidebar-item-container\"&gt; \\n            &lt;a class=\"sidebar-item-text sidebar-link text-start collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-2\" role=\"navigation\" aria-expanded=\"false\"&gt;\\n &lt;span class=\"menu-text\"&gt;Top Modules&lt;/span&gt;&lt;/a&gt;\\n          &lt;a class=\"sidebar-item-toggle text-start collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-2\" role=\"navigation\" aria-expanded=\"false\" aria-label=\"Toggle section\"&gt;\\n            &lt;i class=\"bi bi-chevron-right ms-2\"&gt;&lt;/i&gt;\\n          &lt;/a&gt; \\n      &lt;/div&gt;\\n      &lt;ul id=\"quarto-sidebar-section-2\" class=\"collapse list-unstyled sidebar-section depth2 \"&gt;  \\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Demonstrations/top_modules/top_modules.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;The most popular Python modules&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n      &lt;/ul&gt;\\n  &lt;/li&gt;\\n      &lt;/ul&gt;\\n  &lt;/li&gt;\\n        &lt;li class=\"sidebar-item sidebar-item-section\"&gt;\\n      &lt;div class=\"sidebar-item-container\"&gt; \\n            &lt;a class=\"sidebar-item-text sidebar-link text-start\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-3\" role=\"navigation\" aria-expanded=\"true\"&gt;\\n &lt;span class=\"menu-text\"&gt;Current notebooks - 2025&lt;/span&gt;&lt;/a&gt;\\n          &lt;a class=\"sidebar-item-toggle text-start\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-3\" role=\"navigation\" aria-expanded=\"true\" aria-label=\"Toggle section\"&gt;\\n            &lt;i class=\"bi bi-chevron-right ms-2\"&gt;&lt;/i&gt;\\n          &lt;/a&gt; \\n      &lt;/div&gt;\\n      &lt;ul id=\"quarto-sidebar-section-3\" class=\"collapse list-unstyled sidebar-section depth1 show\"&gt;  \\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Current notebooks - 2025/16-Mar25.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2025 Mar 6&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 16&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n      &lt;/ul&gt;\\n  &lt;/li&gt;\\n        &lt;li class=\"sidebar-item sidebar-item-section\"&gt;\\n      &lt;div class=\"sidebar-item-container\"&gt; \\n            &lt;a class=\"sidebar-item-text sidebar-link text-start\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-4\" role=\"navigation\" aria-expanded=\"true\"&gt;\\n &lt;span class=\"menu-text\"&gt;Archive - 2024&lt;/span&gt;&lt;/a&gt;\\n          &lt;a class=\"sidebar-item-toggle text-start\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-4\" role=\"navigation\" aria-expanded=\"true\" aria-label=\"Toggle section\"&gt;\\n            &lt;i class=\"bi bi-chevron-right ms-2\"&gt;&lt;/i&gt;\\n          &lt;/a&gt; \\n      &lt;/div&gt;\\n      &lt;ul id=\"quarto-sidebar-section-4\" class=\"collapse list-unstyled sidebar-section depth1 show\"&gt;  \\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2024/05-Feb24.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2024 Feb 7&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 5&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2024/06-Mar24.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2024 Mar 7&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 6&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2024/07-Apr24.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2024 Apr 11&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 7&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2024/08-May24.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2024 May 2&lt;sup&gt;nd&lt;/sup&gt; – UQ PUG 8&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2024/09-Jul24.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2024 July 4&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 9&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2024/12-Oct24.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2024 Oct 3&lt;sup&gt;rd&lt;/sup&gt; – UQ PUG 12&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2024/13-Nov24.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2024 Nov 7&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 13&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2024/14-Dec24.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2024 Dec 5&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 14&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n      &lt;/ul&gt;\\n  &lt;/li&gt;\\n        &lt;li class=\"sidebar-item sidebar-item-section\"&gt;\\n      &lt;div class=\"sidebar-item-container\"&gt; \\n            &lt;a class=\"sidebar-item-text sidebar-link text-start\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-5\" role=\"navigation\" aria-expanded=\"true\"&gt;\\n &lt;span class=\"menu-text\"&gt;Archive - 2023&lt;/span&gt;&lt;/a&gt;\\n          &lt;a class=\"sidebar-item-toggle text-start\" data-bs-toggle=\"collapse\" data-bs-target=\"#quarto-sidebar-section-5\" role=\"navigation\" aria-expanded=\"true\" aria-label=\"Toggle section\"&gt;\\n            &lt;i class=\"bi bi-chevron-right ms-2\"&gt;&lt;/i&gt;\\n          &lt;/a&gt; \\n      &lt;/div&gt;\\n      &lt;ul id=\"quarto-sidebar-section-5\" class=\"collapse list-unstyled sidebar-section depth1 show\"&gt;  \\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2023/1-Sep23.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2023 Sep 7&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 1&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2023/2-Oct23.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2023 Oct 5&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 2&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2023/3-Nov23.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2023 Nov 2&lt;sup&gt;nd&lt;/sup&gt; – UQ PUG 3&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n          &lt;li class=\"sidebar-item\"&gt;\\n  &lt;div class=\"sidebar-item-container\"&gt; \\n  &lt;a href=\"./Archive - 2023/4-Dec23.html\" class=\"sidebar-item-text sidebar-link\"&gt;\\n &lt;span class=\"menu-text\"&gt;2023 Dec 7&lt;sup&gt;th&lt;/sup&gt; – UQ PUG 4&lt;/span&gt;&lt;/a&gt;\\n  &lt;/div&gt;\\n&lt;/li&gt;\\n      &lt;/ul&gt;\\n  &lt;/li&gt;\\n    &lt;/ul&gt;\\n    &lt;/div&gt;\\n&lt;/nav&gt;\\n&lt;div id=\"quarto-sidebar-glass\" class=\"quarto-sidebar-collapse-item\" data-bs-toggle=\"collapse\" data-bs-target=\".quarto-sidebar-collapse-item\"&gt;&lt;/div&gt;\\n&lt;!-- margin-sidebar --&gt;\\n    &lt;div id=\"quarto-margin-sidebar\" class=\"sidebar margin-sidebar\"&gt;\\n        &lt;nav id=\"TOC\" role=\"doc-toc\" class=\"toc-active\"&gt;\\n    &lt;h2 id=\"toc-title\"&gt;On this page&lt;/h2&gt;\\n   \\n  &lt;ul&gt;\\n  &lt;li&gt;&lt;a href=\"#about-us\" id=\"toc-about-us\" class=\"nav-link active\" data-scroll-target=\"#about-us\"&gt;About us&lt;/a&gt;\\n  &lt;ul class=\"collapse\"&gt;\\n  &lt;li&gt;&lt;a href=\"#who-are-we\" id=\"toc-who-are-we\" class=\"nav-link\" data-scroll-target=\"#who-are-we\"&gt;Who are we?&lt;/a&gt;&lt;/li&gt;\\n  &lt;li&gt;&lt;a href=\"#when-do-we-meet\" id=\"toc-when-do-we-meet\" class=\"nav-link\" data-scroll-target=\"#when-do-we-meet\"&gt;When do we meet?&lt;/a&gt;&lt;/li&gt;\\n  &lt;/ul&gt;&lt;/li&gt;\\n  &lt;li&gt;&lt;a href=\"#how-it-works\" id=\"toc-how-it-works\" class=\"nav-link\" data-scroll-target=\"#how-it-works\"&gt;How it works&lt;/a&gt;&lt;/li&gt;\\n  &lt;li&gt;&lt;a href=\"#this-website\" id=\"toc-this-website\" class=\"nav-link\" data-scroll-target=\"#this-website\"&gt;This website&lt;/a&gt;&lt;/li&gt;\\n  &lt;li&gt;&lt;a href=\"#general-resources\" id=\"toc-general-resources\" class=\"nav-link\" data-scroll-target=\"#general-resources\"&gt;General Resources&lt;/a&gt;&lt;/li&gt;\\n  &lt;/ul&gt;\\n&lt;/nav&gt;\\n    &lt;/div&gt;\\n&lt;!-- main --&gt;\\n&lt;main class=\"content\" id=\"quarto-document-content\"&gt;\\n\\n&lt;header id=\"title-block-header\" class=\"quarto-title-block default\"&gt;\\n&lt;div class=\"quarto-title\"&gt;\\n&lt;h1 class=\"title\"&gt;UQ Python User Group (UQ PUG)&lt;/h1&gt;\\n&lt;/div&gt;\\n\\n\\n\\n&lt;div class=\"quarto-title-meta\"&gt;\\n\\n    \\n  \\n    \\n  &lt;/div&gt;\\n  \\n\\n\\n&lt;/header&gt;\\n\\n\\n&lt;p&gt;Welcome to the UQ Python User Group (UQ PUG). We meet monthly, and our next gathering is on the 6th of March. We meet in room 12-N109 (Central Library).&lt;/p&gt;\\n&lt;section id=\"about-us\" class=\"level2\"&gt;\\n&lt;h2 class=\"anchored\" data-anchor-id=\"about-us\"&gt;About us&lt;/h2&gt;\\n&lt;section id=\"who-are-we\" class=\"level3\"&gt;\\n&lt;h3 class=\"anchored\" data-anchor-id=\"who-are-we\"&gt;Who are we?&lt;/h3&gt;\\n&lt;p&gt;UQ PUG is a &lt;strong&gt;gathering for Python users of any proficiency&lt;/strong&gt;, to help each other solve problems, share resources and tips, discover new features and hang out as a friendly community.&lt;/p&gt;\\n&lt;/section&gt;\\n&lt;section id=\"when-do-we-meet\" class=\"level3\"&gt;\\n&lt;h3 class=\"anchored\" data-anchor-id=\"when-do-we-meet\"&gt;When do we meet?&lt;/h3&gt;\\n&lt;ul&gt;\\n&lt;li&gt;Every &lt;strong&gt;first Thursday of the month&lt;/strong&gt; from &lt;strong&gt;10:00 am&lt;/strong&gt; to 11:30am&lt;/li&gt;\\n&lt;li&gt;In-person at UQ Central Library 12-N109&lt;/li&gt;\\n&lt;li&gt;Find the next gathering on the &lt;a href=\"https://web.library.uq.edu.au/library-services/training#keyword=Python%20User%20Group;campus=;weekstart=\"&gt;UQ Library Training Page&lt;/a&gt; and book in through StudentHub&lt;/li&gt;\\n&lt;li&gt;Contact us at &lt;a href=\"mailto:training@library.uq.edu.au\"&gt;training@library.uq.edu.au&lt;/a&gt; for any questions or support&lt;/li&gt;\\n&lt;/ul&gt;\\n&lt;/section&gt;\\n&lt;/section&gt;\\n&lt;section id=\"how-it-works\" class=\"level2\"&gt;\\n&lt;h2 class=\"anchored\" data-anchor-id=\"how-it-works\"&gt;How it works&lt;/h2&gt;\\n&lt;p&gt;Each month, we gather at UQ Central Library to help solve each other’s problems and discover new features. We begin with a brief demonstration before diving into group discussion.&lt;/p&gt;\\n&lt;p&gt;Bring along your python questions, problems, conundrums, opinions and victories to share with the group. We’ll try our best to help you out!&lt;/p&gt;\\n&lt;/section&gt;\\n&lt;section id=\"this-website\" class=\"level2\"&gt;\\n&lt;h2 class=\"anchored\" data-anchor-id=\"this-website\"&gt;This website&lt;/h2&gt;\\n&lt;p&gt;On this website we contain the notebooks from our sessions (currently since Oct 24) and details from specific demonstrations.&lt;/p&gt;\\n&lt;/section&gt;\\n&lt;section id=\"general-resources\" class=\"level2\"&gt;\\n&lt;h2 class=\"anchored\" data-anchor-id=\"general-resources\"&gt;General Resources&lt;/h2&gt;\\n&lt;p&gt;Here are a few links to some general resources.&lt;/p&gt;\\n&lt;ul&gt;\\n&lt;li&gt;&lt;a href=\"https://docs.python.org/3/\"&gt;Python Documentation&lt;/a&gt;&lt;/li&gt;\\n&lt;li&gt;&lt;a href=\"https://pypi.org/\"&gt;PyPI&lt;/a&gt;, the python package repository&lt;/li&gt;\\n&lt;li&gt;&lt;a href=\"https://www.anaconda.com/\"&gt;Anaconda&lt;/a&gt;, an environment manager with python applications (e.g.&nbsp;Spyder) available&lt;/li&gt;\\n&lt;li&gt;&lt;a href=\"https://web.library.uq.edu.au/library-services/training\"&gt;UQ Training Sessions&lt;/a&gt;&lt;/li&gt;\\n&lt;li&gt;Library training email - &lt;a href=\"mailto:training@library.uq.edu.au\"&gt;training@library.uq.edu.au&lt;/a&gt;&lt;/li&gt;\\n&lt;li&gt;&lt;a href=\"https://au.linkedin.com/learning/\"&gt;Online courses&lt;/a&gt; with LinkedIn Learning (use &lt;a href=\"https://web.library.uq.edu.au/library-services/training/linkedin-learning-online-courses\"&gt;UQ credentials&lt;/a&gt;)&lt;/li&gt;\\n&lt;/ul&gt;\\n&lt;p&gt;&lt;a href=\"googlec027a6a2057eb177.html\"&gt;For admin&lt;/a&gt;&lt;/p&gt;\\n\\n\\n&lt;/section&gt;\\n\\n&lt;/main&gt; &lt;!-- /main --&gt;\\n&lt;script id=\"quarto-html-after-body\" type=\"application/javascript\"&gt;\\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\\n    const bodyEl = window.document.querySelector(\"body\");\\n    if (mode === \"dark\") {\\n      bodyEl.classList.add(\"quarto-dark\");\\n      bodyEl.classList.remove(\"quarto-light\");\\n    } else {\\n      bodyEl.classList.add(\"quarto-light\");\\n      bodyEl.classList.remove(\"quarto-dark\");\\n    }\\n  }\\n  const toggleBodyColorPrimary = () =&gt; {\\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\\n    if (bsSheetEl) {\\n      toggleBodyColorMode(bsSheetEl);\\n    }\\n  }\\n  toggleBodyColorPrimary();  \\n  const icon = \"\\ue9cb\";\\n  const anchorJS = new window.AnchorJS();\\n  anchorJS.options = {\\n    placement: \\'right\\',\\n    icon: icon\\n  };\\n  anchorJS.add(\\'.anchored\\');\\n  const isCodeAnnotation = (el) =&gt; {\\n    for (const clz of el.classList) {\\n      if (clz.startsWith(\\'code-annotation-\\')) {                     \\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n  const onCopySuccess = function(e) {\\n    // button target\\n    const button = e.trigger;\\n    // don\\'t keep focus\\n    button.blur();\\n    // flash \"checked\"\\n    button.classList.add(\\'code-copy-button-checked\\');\\n    var currentTitle = button.getAttribute(\"title\");\\n    button.setAttribute(\"title\", \"Copied!\");\\n    let tooltip;\\n    if (window.bootstrap) {\\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\\n      button.setAttribute(\"data-bs-placement\", \"left\");\\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\\n      tooltip = new bootstrap.Tooltip(button, \\n        { trigger: \"manual\", \\n          customClass: \"code-copy-button-tooltip\",\\n          offset: [0, -8]});\\n      tooltip.show();    \\n    }\\n    setTimeout(function() {\\n      if (tooltip) {\\n        tooltip.hide();\\n        button.removeAttribute(\"data-bs-title\");\\n        button.removeAttribute(\"data-bs-toggle\");\\n        button.removeAttribute(\"data-bs-placement\");\\n      }\\n      button.setAttribute(\"title\", currentTitle);\\n      button.classList.remove(\\'code-copy-button-checked\\');\\n    }, 1000);\\n    // clear code selection\\n    e.clearSelection();\\n  }\\n  const getTextToCopy = function(trigger) {\\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\\n      for (const childEl of codeEl.children) {\\n        if (isCodeAnnotation(childEl)) {\\n          childEl.remove();\\n        }\\n      }\\n      return codeEl.innerText;\\n  }\\n  const clipboard = new window.ClipboardJS(\\'.code-copy-button:not([data-in-quarto-modal])\\', {\\n    text: getTextToCopy\\n  });\\n  clipboard.on(\\'success\\', onCopySuccess);\\n  if (window.document.getElementById(\\'quarto-embedded-source-code-modal\\')) {\\n    const clipboardModal = new window.ClipboardJS(\\'.code-copy-button[data-in-quarto-modal]\\', {\\n      text: getTextToCopy,\\n      container: window.document.getElementById(\\'quarto-embedded-source-code-modal\\')\\n    });\\n    clipboardModal.on(\\'success\\', onCopySuccess);\\n  }\\n    var localhostRegex = new RegExp(/^(?:http|https):\\\\/\\\\/localhost\\\\:?[0-9]*\\\\//);\\n    var mailtoRegex = new RegExp(/^mailto:/);\\n      var filterRegex = new RegExp(\"https:\\\\/\\\\/uqpug\\\\.github\\\\.io\\\\/\");\\n    var isInternal = (href) =&gt; {\\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\\n    }\\n    // Inspect non-navigation links and adorn them if external\\n \\tvar links = window.document.querySelectorAll(\\'a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)\\');\\n    for (var i=0; i&lt;links.length; i++) {\\n      const link = links[i];\\n      if (!isInternal(link.href)) {\\n        // undo the damage that might have been done by quarto-nav.js in the case of\\n        // links that we want to consider external\\n        if (link.dataset.originalHref !== undefined) {\\n          link.href = link.dataset.originalHref;\\n        }\\n      }\\n    }\\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\\n    const config = {\\n      allowHTML: true,\\n      maxWidth: 500,\\n      delay: 100,\\n      arrow: false,\\n      appendTo: function(el) {\\n          return el.parentElement;\\n      },\\n      interactive: true,\\n      interactiveBorder: 10,\\n      theme: \\'quarto\\',\\n      placement: \\'bottom-start\\',\\n    };\\n    if (contentFn) {\\n      config.content = contentFn;\\n    }\\n    if (onTriggerFn) {\\n      config.onTrigger = onTriggerFn;\\n    }\\n    if (onUntriggerFn) {\\n      config.onUntrigger = onUntriggerFn;\\n    }\\n    window.tippy(el, config); \\n  }\\n  const noterefs = window.document.querySelectorAll(\\'a[role=\"doc-noteref\"]\\');\\n  for (var i=0; i&lt;noterefs.length; i++) {\\n    const ref = noterefs[i];\\n    tippyHover(ref, function() {\\n      // use id or data attribute instead here\\n      let href = ref.getAttribute(\\'data-footnote-href\\') || ref.getAttribute(\\'href\\');\\n      try { href = new URL(href).hash; } catch {}\\n      const id = href.replace(/^#\\\\/?/, \"\");\\n      const note = window.document.getElementById(id);\\n      if (note) {\\n        return note.innerHTML;\\n      } else {\\n        return \"\";\\n      }\\n    });\\n  }\\n  const xrefs = window.document.querySelectorAll(\\'a.quarto-xref\\');\\n  const processXRef = (id, note) =&gt; {\\n    // Strip column container classes\\n    const stripColumnClz = (el) =&gt; {\\n      el.classList.remove(\"page-full\", \"page-columns\");\\n      if (el.children) {\\n        for (const child of el.children) {\\n          stripColumnClz(child);\\n        }\\n      }\\n    }\\n    stripColumnClz(note)\\n    if (id === null || id.startsWith(\\'sec-\\')) {\\n      // Special case sections, only their first couple elements\\n      const container = document.createElement(\"div\");\\n      if (note.children && note.children.length &gt; 2) {\\n        container.appendChild(note.children[0].cloneNode(true));\\n        for (let i = 1; i &lt; note.children.length; i++) {\\n          const child = note.children[i];\\n          if (child.tagName === \"P\" && child.innerText === \"\") {\\n            continue;\\n          } else {\\n            container.appendChild(child.cloneNode(true));\\n            break;\\n          }\\n        }\\n        if (window.Quarto?.typesetMath) {\\n          window.Quarto.typesetMath(container);\\n        }\\n        return container.innerHTML\\n      } else {\\n        if (window.Quarto?.typesetMath) {\\n          window.Quarto.typesetMath(note);\\n        }\\n        return note.innerHTML;\\n      }\\n    } else {\\n      // Remove any anchor links if they are present\\n      const anchorLink = note.querySelector(\\'a.anchorjs-link\\');\\n      if (anchorLink) {\\n        anchorLink.remove();\\n      }\\n      if (window.Quarto?.typesetMath) {\\n        window.Quarto.typesetMath(note);\\n      }\\n      if (note.classList.contains(\"callout\")) {\\n        return note.outerHTML;\\n      } else {\\n        return note.innerHTML;\\n      }\\n    }\\n  }\\n  for (var i=0; i&lt;xrefs.length; i++) {\\n    const xref = xrefs[i];\\n    tippyHover(xref, undefined, function(instance) {\\n      instance.disable();\\n      let url = xref.getAttribute(\\'href\\');\\n      let hash = undefined; \\n      if (url.startsWith(\\'#\\')) {\\n        hash = url;\\n      } else {\\n        try { hash = new URL(url).hash; } catch {}\\n      }\\n      if (hash) {\\n        const id = hash.replace(/^#\\\\/?/, \"\");\\n        const note = window.document.getElementById(id);\\n        if (note !== null) {\\n          try {\\n            const html = processXRef(id, note.cloneNode(true));\\n            instance.setContent(html);\\n          } finally {\\n            instance.enable();\\n            instance.show();\\n          }\\n        } else {\\n          // See if we can fetch this\\n          fetch(url.split(\\'#\\')[0])\\n          .then(res =&gt; res.text())\\n          .then(html =&gt; {\\n            const parser = new DOMParser();\\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\\n            const note = htmlDoc.getElementById(id);\\n            if (note !== null) {\\n              const html = processXRef(id, note);\\n              instance.setContent(html);\\n            } \\n          }).finally(() =&gt; {\\n            instance.enable();\\n            instance.show();\\n          });\\n        }\\n      } else {\\n        // See if we can fetch a full url (with no hash to target)\\n        // This is a special case and we should probably do some content thinning / targeting\\n        fetch(url)\\n        .then(res =&gt; res.text())\\n        .then(html =&gt; {\\n          const parser = new DOMParser();\\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\\n          const note = htmlDoc.querySelector(\\'main.content\\');\\n          if (note !== null) {\\n            // This should only happen for chapter cross references\\n            // (since there is no id in the URL)\\n            // remove the first header\\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\\n              note.children[0].remove();\\n            }\\n            const html = processXRef(null, note);\\n            instance.setContent(html);\\n          } \\n        }).finally(() =&gt; {\\n          instance.enable();\\n          instance.show();\\n        });\\n      }\\n    }, function(instance) {\\n    });\\n  }\\n      let selectedAnnoteEl;\\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\\n        let cellAttr = \\'data-code-cell=\"\\' + cell + \\'\"\\';\\n        let lineAttr = \\'data-code-annotation=\"\\' +  annotation + \\'\"\\';\\n        const selector = \\'span[\\' + cellAttr + \\'][\\' + lineAttr + \\']\\';\\n        return selector;\\n      }\\n      const selectCodeLines = (annoteEl) =&gt; {\\n        const doc = window.document;\\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\\n        const lineIds = lines.map((line) =&gt; {\\n          return targetCell + \"-\" + line;\\n        })\\n        let top = null;\\n        let height = null;\\n        let parent = null;\\n        if (lineIds.length &gt; 0) {\\n            //compute the position of the single el (top and bottom and make a div)\\n            const el = window.document.getElementById(lineIds[0]);\\n            top = el.offsetTop;\\n            height = el.offsetHeight;\\n            parent = el.parentElement.parentElement;\\n          if (lineIds.length &gt; 1) {\\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\\n            height = bottom - top;\\n          }\\n          if (top !== null && height !== null && parent !== null) {\\n            // cook up a div (if necessary) and position it \\n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\\n            if (div === null) {\\n              div = window.document.createElement(\"div\");\\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\\n              div.style.position = \\'absolute\\';\\n              parent.appendChild(div);\\n            }\\n            div.style.top = top - 2 + \"px\";\\n            div.style.height = height + 4 + \"px\";\\n            div.style.left = 0;\\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\\n            if (gutterDiv === null) {\\n              gutterDiv = window.document.createElement(\"div\");\\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\\n              gutterDiv.style.position = \\'absolute\\';\\n              const codeCell = window.document.getElementById(targetCell);\\n              const gutter = codeCell.querySelector(\\'.code-annotation-gutter\\');\\n              gutter.appendChild(gutterDiv);\\n            }\\n            gutterDiv.style.top = top - 2 + \"px\";\\n            gutterDiv.style.height = height + 4 + \"px\";\\n          }\\n          selectedAnnoteEl = annoteEl;\\n        }\\n      };\\n      const unselectCodeLines = () =&gt; {\\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\\n        elementsIds.forEach((elId) =&gt; {\\n          const div = window.document.getElementById(elId);\\n          if (div) {\\n            div.remove();\\n          }\\n        });\\n        selectedAnnoteEl = undefined;\\n      };\\n        // Handle positioning of the toggle\\n    window.addEventListener(\\n      \"resize\",\\n      throttle(() =&gt; {\\n        elRect = undefined;\\n        if (selectedAnnoteEl) {\\n          selectCodeLines(selectedAnnoteEl);\\n        }\\n      }, 10)\\n    );\\n    function throttle(fn, ms) {\\n    let throttle = false;\\n    let timer;\\n      return (...args) =&gt; {\\n        if(!throttle) { // first call gets through\\n            fn.apply(this, args);\\n            throttle = true;\\n        } else { // all the others get throttled\\n            if(timer) clearTimeout(timer); // cancel #2\\n            timer = setTimeout(() =&gt; {\\n              fn.apply(this, args);\\n              timer = throttle = false;\\n            }, ms);\\n        }\\n      };\\n    }\\n      // Attach click handler to the DT\\n      const annoteDls = window.document.querySelectorAll(\\'dt[data-target-cell]\\');\\n      for (const annoteDlNode of annoteDls) {\\n        annoteDlNode.addEventListener(\\'click\\', (event) =&gt; {\\n          const clickedEl = event.target;\\n          if (clickedEl !== selectedAnnoteEl) {\\n            unselectCodeLines();\\n            const activeEl = window.document.querySelector(\\'dt[data-target-cell].code-annotation-active\\');\\n            if (activeEl) {\\n              activeEl.classList.remove(\\'code-annotation-active\\');\\n            }\\n            selectCodeLines(clickedEl);\\n            clickedEl.classList.add(\\'code-annotation-active\\');\\n          } else {\\n            // Unselect the line\\n            unselectCodeLines();\\n            clickedEl.classList.remove(\\'code-annotation-active\\');\\n          }\\n        });\\n      }\\n  const findCites = (el) =&gt; {\\n    const parentEl = el.parentElement;\\n    if (parentEl) {\\n      const cites = parentEl.dataset.cites;\\n      if (cites) {\\n        return {\\n          el,\\n          cites: cites.split(\\' \\')\\n        };\\n      } else {\\n        return findCites(el.parentElement)\\n      }\\n    } else {\\n      return undefined;\\n    }\\n  };\\n  var bibliorefs = window.document.querySelectorAll(\\'a[role=\"doc-biblioref\"]\\');\\n  for (var i=0; i&lt;bibliorefs.length; i++) {\\n    const ref = bibliorefs[i];\\n    const citeInfo = findCites(ref);\\n    if (citeInfo) {\\n      tippyHover(citeInfo.el, function() {\\n        var popup = window.document.createElement(\\'div\\');\\n        citeInfo.cites.forEach(function(cite) {\\n          var citeDiv = window.document.createElement(\\'div\\');\\n          citeDiv.classList.add(\\'hanging-indent\\');\\n          citeDiv.classList.add(\\'csl-entry\\');\\n          var biblioDiv = window.document.getElementById(\\'ref-\\' + cite);\\n          if (biblioDiv) {\\n            citeDiv.innerHTML = biblioDiv.innerHTML;\\n          }\\n          popup.appendChild(citeDiv);\\n        });\\n        return popup.innerHTML;\\n      });\\n    }\\n  }\\n});\\n&lt;/script&gt;\\n&lt;/div&gt; &lt;!-- /content --&gt;\\n\\n\\n\\n\\n&lt;/body&gt;&lt;/html&gt;'\n\n\nThis is the HTML for the website. If you want to webscrape, the next thing to do is import the BeautifulSoup package. We’ll leave it there.",
    "crumbs": [
      "About us",
      "Demonstrations",
      "Top Modules",
      "The most popular Python modules"
    ]
  },
  {
    "objectID": "Demonstrations/top_modules/top_modules.html#numpy",
    "href": "Demonstrations/top_modules/top_modules.html#numpy",
    "title": "The most popular Python modules",
    "section": "numpy",
    "text": "numpy\nThe numpy package is huge. There’s far too much to cover. But we’ll take a look two basics.\nThe first is arrays, a vector-like object that beats lists:\n\nimport numpy as np\n\nnp.array([1,2,3,4])\n\narray([1, 2, 3, 4])\n\n\n\nbasic_list = [1,2,3,4]\n\nbasic_list * 2\n# This is annoying!\n\n[1, 2, 3, 4, 1, 2, 3, 4]\n\n\nWhy does it beat lists? Watch:\n\nprint([1,2,3,4]*3)\nprint(np.array([1,2,3,4])*3)\n\n[1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4]\n[ 3  6  9 12]\n\n\nArrays can be multidimensional - matrices or tensors!\n\nimport numpy as np\ntop_row = [1,2,3]\nbottom_row = [4,5,6]\n\nnp.array([top_row, bottom_row])\n\narray([[1, 2, 3],\n       [4, 5, 6]])\n\n\nLet’s make two matrices and multiply them, with matrix multiplication:\n\\[\\begin{pmatrix}1&2&3\\\\4&5&6\\end{pmatrix}\\begin{pmatrix}1&2\\\\3&4\\\\5&6\\end{pmatrix}\\]\nWe use the @ symbol to denote matrix multiplication (with numpy)\n\nA = np.array([[1,2,3],[4,5,6]])\nB = np.array([[1,2],[3,4],[5,6]])\n\nA @ B\n\narray([[22, 28],\n       [49, 64]])\n\n\nYou can also create really long arrays. This is useful for graphing. Using np.arange(start, stop, interaval), and matplotlib.pyplot to plot,\n\\[ y = \\frac{\\cos(2π\\times x)}{x} \\]\n\nimport matplotlib.pyplot as plt\n\nx = np.arange(0.1, 10, 0.0001)\ny = np.sin(2*np.pi*x) / x\n\nplt.plot(x,y)",
    "crumbs": [
      "About us",
      "Demonstrations",
      "Top Modules",
      "The most popular Python modules"
    ]
  },
  {
    "objectID": "Demonstrations/top_modules/top_modules.html#cryptography",
    "href": "Demonstrations/top_modules/top_modules.html#cryptography",
    "title": "The most popular Python modules",
    "section": "cryptography",
    "text": "cryptography\nFor making secret keys that require tokens to decript!\nBasically, we use a key to encrypt our token,\n\\[ \\text{Secret} \\xrightarrow{\\text{Key}} \\text{Token} \\]\nThen use the same key to decrypt it.\n\\[\\text{Key} + \\text{Token} = \\text{Secret}\\]\nWe make a key that can be used to generate tokens (i.e. encrypted messages). Then, you use the same key to decode the message. Fernet is one technique to do it:\n\nfrom cryptography.fernet import Fernet\n\nkey = Fernet.generate_key()\nkey\n\nb'YraYOb2WUiH67-h7s0yP6I-fIJh1Yr6V8f-KV5ahfPE='\n\n\nNow that we have a key, we store it into a Fernet object. Then, we turn our secret into a token:\n\n# Store the key\nf = Fernet(key)\n\n# Encrypt our message\ntoken = f.encrypt(b\"my secrets\")\ntoken\n\nb'gAAAAABn03Rf_Sb6onZ48Q3haIiW_u41a62snfHj402ncke3fYypzqv5KogwL3XpUP_Sxps362YLsaW47qcThgXD2oZvwYhsdw=='\n\n\n\nThe b\"... means bytes, so its bytecoded.\n\nFinally, we use the key (stored in f) to decrypt the message from the token\n\nf.decrypt(token)\n\nb'my secrets'",
    "crumbs": [
      "About us",
      "Demonstrations",
      "Top Modules",
      "The most popular Python modules"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/17-Apr25.html",
    "href": "2025 - Current notebooks/17-Apr25.html",
    "title": "2025 Apr 3rd – UQ PUG 17",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Apr 3<sup>rd</sup> -- UQ PUG 17"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/17-Apr25.html#overview",
    "href": "2025 - Current notebooks/17-Apr25.html#overview",
    "title": "2025 Apr 3rd – UQ PUG 17",
    "section": "Overview",
    "text": "Overview\nWelcome to the second PUG for the year! This month we’re taking a look at Jupyter notebooks.\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nWe have moved from a mailing list to a Teams channel! Opt-in to receive PUG updates\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.\n\n# Put any code you'd like to run here!\n\n# For simpler stuff:\nimport scipy.stats as stats\n\n# For more comprehensive modelling\nimport statsmodels.formula.api as smf\n\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n\n# Bring in my data\ndf = pd.read_csv(\"../datasets/gapminder.csv\")\n\ndf = df[df[\"country\"] == \"Australia\"]\ndf = df[[\"year\", \"pop\"]]\n\n# Perform OLS\nmodel = smf.ols(\"pop ~ year\", data = df)\n\nresults = model.fit()\nresults.summary()\n\nplt.plot(df[\"year\"], results.fittedvalues, \"r\")\nplt.plot(df[\"year\"], df[\"pop\"], \".\")\n\n\nAnswers\n\nYou might find this page useful - from our January training intensive\nThe statsmodels package is your friend here - see how I’ve used it above for an OLS regression. This page has a summary of the functions you can do",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Apr 3<sup>rd</sup> -- UQ PUG 17"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/17-Apr25.html#introduce-yourself",
    "href": "2025 - Current notebooks/17-Apr25.html#introduce-yourself",
    "title": "2025 Apr 3rd – UQ PUG 17",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\n\n\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron\nUQ Library & SMP\nTo share and learn\n\n\nAnne\nChina / School of the Environment\nInspired by friend\n\n\nHe Yang\nChina / School of the Envirnoment\nInspired by friend\n\n\nJessie\nFaculty of Health\nData analysis\n\n\nGeorgina\nVirology PhD\nearning about machine learning models in Pythonn\n\n\nDuncan\nSPPS\nData Analysis to support school academics/Learn to automate tasks in Winndows",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Apr 3<sup>rd</sup> -- UQ PUG 17"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/17-Apr25.html#questions",
    "href": "2025 - Current notebooks/17-Apr25.html#questions",
    "title": "2025 Apr 3rd – UQ PUG 17",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nWhat are your Python use cases? | Cameron\nWhy do you want to / do use Python\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nSome question | Anne\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nHow do I run a regression model to check for regression to the mean on a data set in Excel/CSV? | Duncan\nAdd more details here, then press CTRL + ENTER when you’re done\n\n\nMarkdown in Python outputs | He Yang / Cameron\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n# ONce you've installed markdown\nfrom markdown import markdown\n\n\nAnswers\n\npip install markdown\nAnswer 2\n…\n\n\n\n\nWhere to start with machine learning? | Jessie\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\n\nAnswers\n\nStart with SciKit: https://scikit-learn.org\nThen try Keras: https://keras.io/\nPyTorch: https://pytorch.org/\n\nCheck those website for how to install (e.g. with conda or pip)\n\n\n\nPackaging modules | He Yang\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\nimport final_test_module.test_module as tm\n\ntm.test_function()\n\n\n\nHello!\n\n\n\nAnswers",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Apr 3<sup>rd</sup> -- UQ PUG 17"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/22-Oct25.html",
    "href": "2025 - Current notebooks/22-Oct25.html",
    "title": "2025 Oct 2nd – UQ PUG 22",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Oct 2<sup>nd</sup> -- UQ PUG 22"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/22-Oct25.html#overview",
    "href": "2025 - Current notebooks/22-Oct25.html#overview",
    "title": "2025 Oct 2nd – UQ PUG 22",
    "section": "Overview",
    "text": "Overview\nWelcome to the October UQ PUG!.\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nIf you’d like to receive regular updates and post questions during the month, join our Teams channel!\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Oct 2<sup>nd</sup> -- UQ PUG 22"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/22-Oct25.html#introduce-yourself",
    "href": "2025 - Current notebooks/22-Oct25.html#introduce-yourself",
    "title": "2025 Oct 2nd – UQ PUG 22",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nName\nOrganisation/School\nReason for coming",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Oct 2<sup>nd</sup> -- UQ PUG 22"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/22-Oct25.html#questions",
    "href": "2025 - Current notebooks/22-Oct25.html#questions",
    "title": "2025 Oct 2nd – UQ PUG 22",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "2025 Oct 2<sup>nd</sup> -- UQ PUG 22"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/19-Jun25.html",
    "href": "2025 - Current notebooks/unused/19-Jun25.html",
    "title": "2025 July 5st – UQ PUG 19",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 July 5<sup>st</sup> -- UQ PUG 19"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/19-Jun25.html#overview",
    "href": "2025 - Current notebooks/unused/19-Jun25.html#overview",
    "title": "2025 July 5st – UQ PUG 19",
    "section": "Overview",
    "text": "Overview\nStay tuned for details about this month’s presentation…\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nWe have moved from a mailing list to a Teams channel! Opt-in to receive PUG updates\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 July 5<sup>st</sup> -- UQ PUG 19"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/19-Jun25.html#introduce-yourself",
    "href": "2025 - Current notebooks/unused/19-Jun25.html#introduce-yourself",
    "title": "2025 July 5st – UQ PUG 19",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron\nUQ Library & SMP\nTo share and learn",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 July 5<sup>st</sup> -- UQ PUG 19"
    ]
  },
  {
    "objectID": "2025 - Current notebooks/unused/19-Jun25.html#questions",
    "href": "2025 - Current notebooks/unused/19-Jun25.html#questions",
    "title": "2025 July 5st – UQ PUG 19",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…\n\n\n\n\nQuestion | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\nAnswer 1\nAnswer 2\n…",
    "crumbs": [
      "About us",
      "2025 - Current notebooks",
      "Unused",
      "2025 July 5<sup>st</sup> -- UQ PUG 19"
    ]
  },
  {
    "objectID": "2024 - Archive/05-Feb24.html",
    "href": "2024 - Archive/05-Feb24.html",
    "title": "2024 Feb 7th – UQ PUG 5",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general information for details about who we are and what we do.\n\n\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\n\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.\n\n\n\nWe offer Python training sessions and resources, you can find our introductory guide here.\n\n\n\n\n\n\n\n\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nNida\nSCMB\nlearning about python\n\n\nCameron West\nUQ Library / SMP\nTo help with Python!\n\n\nSonia\nColombia/Master of Business\nImproving Python Skills\n\n\nElizabeth\nLecturer of Finance, UQ Business School\nJust to learn about Python for my research projects\n\n\nLily\nUQ BA student\nto learn how to use python handling data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\n\nHow can we use AI coding tools such as chatGPT help us learn Python more efficiently?\n## Code for Q1\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\nI want to: check the first occurence of the letter M in my strings (that can be 200 characters long, that’s why I don’t want to do it manually)\nsuppose I have this strings: aminoacid_seq = ‘SSSSATTVMHSSIVLATVLFVAIASASKTRELCMKSLEHAKVGTSKEAKQDGIDLYKHMFEHYPAMKKYFKHRENYTPADVQKDPFFIKQGQNILLACHVLCATYDDRETFDAYVGELMARHERDHVKVPNDVWNHFWEHFIEFLGSKTTLDEPTKHAWQEIGKEFSHEISHHGRHSVRDHCMNSLEYIAIGDKEHQKQNGIDLYKHMFEHYPHMRKAFKGRENFTKEDVQKDAFFVNKDTRFCWPFVCCDSSYDDEPTFDYFVDALMDRHIKDDIHLPQEQWHEFWKLFAEYLNEKSHQHLTEAEKHAWSTIGEDFAHEADKHAKAEKDHHEGEHKEEHH’\nIf I use this code:\nM_loc = aminoacids_seq[0].find(‘M’) print(M_loc) print(len(aminoacids_seq[0]))\nam I correct?\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Feb  1 10:56:35 2024\n\n@author: uqcwest5\n\"\"\"\n\n# Initial problem\n\naminoacids_seq = 'SSSSATTVMHSSIVLATVLFVAIASASKTRELCMKSLEHAKVGTSKEAKQDGIDLYKHMFEHYPAMKKYFKHRENYTPADVQKDPFFIKQGQNILLACHVLCATYDDRETFDAYVGELMARHERDHVKVPNDVWNHFWEHFIEFLGSKTTLDEPTKHAWQEIGKEFSHEISHHGRHSVRDHCMNSLEYIAIGDKEHQKQNGIDLYKHMFEHYPHMRKAFKGRENFTKE*DVQKDAFFVNKDTRFCWPFVCCDSSYDDEPTFDYFVDALMDRHIKDDIHLPQEQWHEFWKLFAEYLNEKSHQHLTEAEKHAWSTIGEDFAHEADKHAKAEKDHHEGEHKEEHH'\n\nM_loc = aminoacids_seq.find('M')\nend_loc = aminoacids_seq.find('*')\n\naminoacids_seq[M_loc:end_loc + 1]\n\n# New problem\n# Count all the Ms\n# Turn every section between Ms into a separate substring\n\nimport pandas as pd\n\ncount_M = aminoacids_seq.count(\"M\")\n\nM_start = aminoacids_seq.find('M')\nM_end = aminoacids_seq.find('M', M_start + 1)\n\nproteins = [aminoacids_seq[M_start:M_end]]\n\nfor i in range(1, count_M):\n    M_start = M_end\n    M_end = aminoacids_seq.find('M', M_start + 1)\n    \n    proteins.append(aminoacids_seq[M_start:M_end])\n    \npd.Series(proteins).to_csv(\"proteins.csv\")\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\n## Code for Q3\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\n## Code for Q4\ncorrect_ORF = []        \nfor seq in protseq_true:\n    m_pos = seq.find(\"M\")  \n    m_end_seq = seq[m_pos:]\n    if len(m_end_seq) &gt; 100:\n        print(m_end_seq)\n        print(len(m_end_seq))\n        correct_ORF.append(m_end_seq)\n        \n# fyi\nprotseq_true = ['CTIVFKRVCGVSAARLTPCGTGTSTDVVYRAFDIYNDKVAGFAKFLKTNCCRFQEKDEDDNLIDSYFVVKRHTFSNYQHEETIYNLLKDCPAVAKHDFFKFRIDGDMVPHISRQRLTKYTMADLVYALRHFDEGNCDTLKEILVTYNCCDDDYFNKKDWYDFVENPDILRVYANLGERVRQALLKTVQFCDAMRNAGIVGVLTLDNQDLNGNWYDFGDFIQTTPGSGVPVVDSYYSLLMPILTLTRALTAESHVDTDLTKPYIKWDLLKYDFTEERLKLFDRYFKYWDQTYHPNCVNCLDDRCILHCANFNVLFSTVFPPTSFGPLVRKIFVDGVPFVVSTGYHFRELGVVHNQDVNLHSSRLSFKELLVYAADPAMHAASGNLLLDKRTTCFSVAALTNNVAFQTVKPGNFNKDFYDFAVSKGFFKEGSSVELKHFFFAQDGNAAISDYDYYRYNLPTMCDIRQLLFVVEVVDKYFDCYDGGCINANQVIVNNLDKSAGFPFNKWGKARLYYDSMSYEDQDALFAYTKRNVIPTITQMNLKYAISAKNRARTVAGVSICSTMTNRQFHQKLLKSIAATRGATVVIGTSKFYGGWHNMLKTVYSDVENPHLMGWDYPKCDRAMPNMLRIMASLVLARKHTTCCSLSHRFYRLANECAQVLSEMVMCGGSLYVKPGGTSSGDATTAYANSVFNICQAVTANVNALLSTDGNKIADKYVRNLQHRLYECLYRNRDVDTDFVNEFYAYLRKHFSMMILSDDAVVCFNSTYASQGLVASIKNFKSVLYYQNNVFMSEAKCWTETDLTKGPHEFCSQHTMLVKQGDDYVYLPYPDPSRILGAGCFVDDIVKTDGTLMIERFVSLAIDAYPLTKHPNQEYADVFHLYLQYIRKLHDELTGHMLDMYSVMLTNDNTSRYWEPEFYEAMYTPHTVLQAVGACVLCNSQTSLRCGACIRRPFLCCKCCYDHVISTSHKLVLSVNPYVCNAPGCDVTDVTQLYLGGMSYYCKSHKPPISFPLCANGQVFGLYKNTCVGSDNVTDFNAIATCDWTNAGDYILANTCTERLKLFAAETLKATEETFKLSYGIATVREVLSDRELHLSWEVGKPRPPLNRNYVFTGYRVTKNSKVQIGEYTFEKGDYGDAVVYRGTTTYKLNVGDYFVLTSHTVMPLSAPTLVPQEHYVRITGLYPTLNISDEFSSNVANYQKVGMQKYSTLQGPPGTGKSHFAIGLALYYPSARIVYTACSHAAVDALCEKALKYLPIDKCSRIIPARARVECFDKFKVNSTLEQYVFCTVNALPETTADIVVFDEISMATNYDLSVVNARLRAKHYVYIGDPAQLPAPRTLLTKGTLEPEYFNSVCRLMKTIGPDMFLGTCRRCPAEIVDTVSALVYDNKLKAHKDKSAQCFKMFYKGVITHDVSSAINRPQIGVVREFLTRNPAWRKAVFISPYNSQNAVASKILGLPTQTVDSSQGSEYDYVIFTQTTETAHSCNVNRFNVAITRAKVGILCIMSDRDLYDKLQFTSLEIPRRNVATLQAENVTGLFKDCSKVITGLHPTQAPTHLSVDTKFKTEGLCVDIPGIPKDMTYRRLISMMGFKMNYQVNGYPNMFITREEAIRHVRAWIGFDVEGCHATREAVGTNLPLQLGFSTGVNLVAVPTGYVDTPNNTDFSRVSAKPPPGDQFKHLIPLMYKGLPWNVVRIKIVQMLSDTLKNLSDRVVFVLWAHGFELTSMKYFVKIGPERTCCLCDRRATCFSTASDTYACWHHSIGFDYVYNPFMIDVQQWGFTGNLQSNHDLYCQVHGNAHVASCDAIMTRCLAVHECFVKRVDWTIEYPIIGDELKINAACRKVQHMVVKAALLADKFPVLHDIGNPKAIKCVPQADVEWKFYDAQPCSDKAYKIEELFYSYATHSDKFTDGVCLFWNCNVDRYPANSIVCRFDTRVLSNLNLPGCDGGSLYVNKHAFHTPAFDKSAFVNLKQLPFFYYSDSPCESHGKQVVSDIDYVPLKSATCITRCNLGGAVCRHHANEYRLYLDAYNMMISAGFSLWVYKQFDTYNLWNTFTRLQSLENVAFNVVNKGHFDGQQGEVPVSIINNTVYTKVDGVDVELFENKTTLPVNVAFELWAKRNIKPVPEVKILNNLGVDIAANTVIWDYKRDAPAHISTIGVCSMTDIAKKPTETICAPLTVFFDGRVDGQVDLFRNARNGVLITEGSVKGLQPSVGPKQASLNGVTLIGEAVKTQFNYYKKVDGVVQQLPETYFTQSRNLQEFKPRSQMEIDFLELAMDEFIERYKLEGYAFEHIVYGDFSHSQLGGLHLLIGLAKRFKESPFELEDFIPMDSTVKNYFITDAQTGSSKCVCSVIDLLLDDFVEIIKSQDLSVVSKVVKVTIDYTEISFMLWCKDGHVETFYPKLQSSQAWQPGVAMPNLYKMQRMLLEKCDLQNYGDSATLPKGIMMNVAKYTQLCQYLNTLTLAVPYNMRVIHFGAGSDKGVAPGTAVLRQWLPTGTLLVDSDLNDFVSDADSTLIGDCATVHTANKWDLIISDMYDPKTKNVTKENDSKEGFFTYICGFIQQKLALGGSVAIKITEHSWNADLYKLMGHFAWWTAFVTNVNASSSEAFLIGCNYLGKPREQIDGYVMHANYIFWRNTNPIQLSSYSLFDMSKFPLKLRGTAVMSLKEGQINDMILSLLSKGRLIIRENNRVVISSDVLVNN', 'ASAQRSQITLHINELMDLFMRIFTIGTVTLKQGEIKDATPSDFVRATATIPIQASLPFGWLIVGVALLAVFQSASKIITLKKRWQLALSKGVHFVCNLLLLFVTVYSHLLLVAAGLEAPFLYLYALVYFLQSINFVRIIMRLWLCWKCRSKNPLLYDANYFLCWHTNCYDYCIPYNSVTSSIVITSGDGTTSPISEHDYQIGGYTEKWESGVKDCVVLHSYFTSDYYQLYSTQLSTDTGVEHVTFFIYNKIVDEPEEHVQIHTIDGSSGVVNPVMEPIYDEPTTTTSVPL', 'TNMKIILFLALITLATCELYHYQECVRGTTVLLKEPCSSGTYEGNSPFHPLADNKFALTCFSTQFAFACPDGVKHVYQLRARSVSPKLFIRQEEVQELYSPIFLIVAAIVFITLCFTLKRKTE', 'PKGKMESLVPGFNEKTHVQLSLPVLQVRDVLVRGFGDSVEEVLSEARQHLKDGTCGLVEVEKGVLPQLEQPYVFIKRSDARTAPHGHVMVELVAELEGIQYGRSGETLGVLVPHVGEIPVAYRKVLLRKNGNKGAGGHSYGADLKSFDLGDELGTDPYEDFQENWNTKHSSGVTRELMRELNGGAYTRYVDNNFCGPDGYPLECIKDLLARAGKASCTLSEQLDFIDTKRGVYCCREHEHEIAWYTERSEKSYELQTPFEIKLAKKFDTFNGECPNFVFPLNSIIKTIQPRVEKKKLDGFMGRIRSVYPVASPNECNQMCLSTLMKCDHCGETSWQTGDFVKATCEFCGTENLTKEGATTCGYLPQNAVVKIYCPACHNSEVGPEHSLAEYHNESGLKTILRKGGRTIAFGGCVFSYVGCHNKCAYWVPRASANIGCNHTGVVGEGSEGLNDNLLEILQKEKVNINIVGDFKLNEEIAIILASFSASTSAFVETVKGLDYKAFKQIVESCGNFKVTKGKAKKGAWNIGEQKSILSPLYAFASEAARVVRSIFSRTLETAQNSVRVLQKAAITILDGISQYSLRLIDAMMFTSDLATNNLVVMAYITGGVVQLTSQWLTNIFGTVYEKLKPVLDWLEEKFKEGVEFLRDGWEIVKFISTCACEIVGGQIVTCAKEIKESVQTFFKLVNKFLALCADSIIIGGAKLKALNLGETFVTHSKGLYRKCVKSREETGLLMPLKAPKEIIFLEGETLPTEVLTEEVVLKTGDLQPLEQPTSEAVEAPLVGTPVCINGLMLLEIKDTEKYCALAPNMMVTNNTFTLKGGAPTKVTFGDDTVIEVQGYKSVNITFELDERIDKVLNEKCSAYTVELGTEVNEFACVVADAVIKTLQPVSELLTPLGIDLDEWSMATYYLFDESGEFKLASHMYCSFYPPDEDEEEGDCEEEEFEPSTQYEYGTEDDYQGKPLEFGATSAALQPEEEQEEDWLDDDSQQTVGQQDGSEDNQTTTIQTIVEVQPQLEMELTPVVQTIEVNSFSGYLKLTDNVYIKNADIVEEAKKVKPTVVVNAANVYLKHGGGVAGALNKATNNAMQVESDDYIATNGPLKVGGSCVLSGHNLAKHCLHVVGPNVNKGEDIQLLKSAYENFNQHEVLLAPLLSAGIFGADPIHSLRVCVDTVRTNVYLAVFDKNLYDKLVSSFLEMKSEKQVEQKIAEIPKEEVKPFITESKPSVEQRKQDDKKIKACVEEVTTTLEETKFLTENLLLYIDINGNLHPDSATLVSDIDITFLKKDAPYIVGDVVQEGVLTAVVIPTKKAGGTTEMLAKALRKVPTDNYITTYPGQGLNGYTVEEAKTVLKKCKSAFYILPSIISNEKQEILGTVSWNLREMLAHAEETRKLMPVCVETKAIVSTIQRKYKGIKIQEGVVDYGARFYFYTSKTTVASLINTLNDLNETLVTMPLGYVTHGLNLEEAARYMRSLKVPATVSVSSPDAVTAYNGYLTSSSKTPEEHFIETISLAGSYKDWSYSGQSTQLGIEFLKRGDKSVYYTSNPTTFHLDGEVITFDNLKTLLSLREVRTIKVFTTVDNINLHTQVVDMSMTYGQQFGPTYLDGADVTKIKPHNSHEGKTFYVLPNDDTLRVEAFEYYHTTDPSFLGRYMSALNHTKKWKYPQVNGLTSIKWADNNCYLATALLTLQQIELKFNPPALQDAYYRARAGEAANFCALILAYCNKTVGELGDVRETMSYLFQHANLDSCKRVLNVVCKTCGQQQTTLKGVEAVMYMGTLSYEQFKKGVQIPCTCGKQATKYLVQQESPFVMMSAPPAQYELKHGTFTCASEYTGNYQCGHYKHITSKETLYCIDGALLTKSSEYKGPITDVFYKENSYTTTIKPVTYKLDGVVCTEIDPKLDNYYKKDNSYFTEQPIDLVPNQPYPNASFDNFKFVCDNIKFADDLNQLTGYKKPASRELKVTFFPDLNGDVVAIDYKHYTPSFKKGAKLLHKPIVWHVNNATNKATYKPNTWCIRCLWSTKPVETSNSFDVLKSEDAQGMDNLACEDLKPVSEEVVENPTIQKDVLECNVKTTEVVGDIILKPANNSLKITEEVGHTDLMAAYVDNSSLTIKKPNELSRVLGLKTLATHGLAAVNSVPWDTIANYAKPFLNKVVSTTTNIVTRCLNRVCTNYMPYFFTLLLQLCTFTRSTNSRIKASMPTTIAKNTVKSVGKFCLEASFNYLKSPNFSKLINIIIWFLLLSVCLGSLIYSTAALGVLMSNLGMPSYCTGYREGYLNSTNVTIATYCTGSIPCSVCLSGLDSLDTYPSLETIQITISSFKWDLTAFGLVAEWFLAYILFTRFFYVLGLAAIMQLFFSYFAVHFISNSWLMWLIINLVQMAPISAMVRMYIFFASFYYVWKSYVHVVDGCNSSTCMMCYKRNRATRVECTTIVNGVRRSFYVYANGGKGFCKLHNWNCVNCDTFCAGSTFISDEVARDLSLQFKRPINPTDQSSYIVDSVTVKNGSIHLYFDKAGQKTYERHSLSHFVNLDNLRANNTKGSLPINVIVFDGKSKCEESSAKSASVYYSQLMCQPILLLDQALVSDVGDSAEVAVKMFDAYVNTFSSTFNVPMEKLKTLVATAEAELAKNVSLDNVLSTFISAARQGFVDSDVETKDVVECLKLSHQSDIEVTGDSCNNYMLTYNKVENMTPRDLGACIDCSARHINAQVAKSHNIALIWNVKDFMSLSEQLRKQIRSAAKKNNLPFKLTCATTRQVVNVVTTKIALKGGKIVNNWLKQLIKVTLVFLFVAAIFYLITPVHVMSKHTDFSSEIIGYKAIDGGVTRDIASTDTCFANKHADFDTWFSQRGGSYTNDKACPLIAAVITREVGFVVPGLPGTILRTTNGDFLHFLPRVFSAVGNICYTPSKLIEYTDFATSACVLAAECTIFKDASGKPVPYCYDTNVLEGSVAYESLRPDTRYVLMDGSIIQFPNTYLEGSVRVVTTFDSEYCRHGTCERSEAGVCVSTSGRWVLNNDYYRSLPGVFCGVDAVNLLTNMFTPLIQPIGALDISASIVAGGIVAIVVTCLAYYFMRFRRAFGEYSHVVAFNTLLFLMSFTVLCLTPVYSFLPGVYSVIYLYLTFYLTNDVSFLAHIQWMVMFTPLVPFWITIAYIICISTKHFYWFFSNYLKRRVVFNGVSFSTFEEAALCTFLLNKEMYLKLRSDVLLPLTQYNRYLALYNKYKYFSGAMDTTSYREAACCHLAKALNDFSNSGSDVLYQPPQTSITSAVLQSGFRKMAFPSGKVEGCMVQVTCGTTTLNGLWLDDVVYCPRHVICTSEDMLNPNYEDLLIRKSNHNFLVQAGNVQLRVIGHSMQNCVLKLKVDTANPKTPKYKFVRIQPGQTFSVLACYNGSPSGVYQCAMRPNFTIKGSFLNGSCGSVGFNIDYDCVSFCYMHHMELPTGVHAGTDLEGNFYGPFVDRQTAQAAGTDTTITVNVLAWLYAAVINGDRWFLNRFTTTLNDFNLVAMKYNYEPLTQDHVDILGPLSAQTGIAVLDMCASLKELLQNGMNGRTILGSALLEDEFTPFDVVRQCSGVTFQSAVKRTIKGTHHWLLLTILTSLLVLVQSTQWSLFFFLYENAFLPFAMGIIAMSAFAMMFVKHKHAFLCLFLLPSLATVAYFNMVYMPASWVMRIMTWLDMVDTSLSGFKLKDCVMYASAVVLLILMTARTVYDDGARRVWTLMNVLTLVYKVYYGNALDQAISMWALIISVTSNYSGVVTTVMFLARGIVFMCVEYCPIFFITGNTLQCIMLVYCFLGYFCTCYFGLFCLLNRYFRLTLGVYDYLVSTQEFRYMNSQGLLPPKNSIDAFKLNIKLLGVGGKPCIKVATVQSKMSDVKCTSVVLLSVLQQLRVESSSKLWAQCVQLHNDILLAKDTTEAFEKMVSLLSVLLSMQGAVDINKLCEEMLDNRATLQAIASEFSSLPSYAAFATAQEAYEQAVANGDSEVVLKKLKKSLNVAKSEFDRDAAMQRKLEKMADQAMTQMYKQARSEDKRAKVTSAMQTMLFTMLRKLDNDALNNIINNARDGCVPLNIIPLTTAAKLMVVIPDYNTYKNTCDGTTFTYASALWEIQQVVDADSKIVQLSEISMDNSPNLAWPLIVTALRANSAVKLQNNELSPVALRQMSCAAGTTQTACTDDNALAYYNTTKGGRFVLALLSDLQDLKWARFPKSDGTGTIYTELEPPCRFVTDTPKGPKVKYLYFIKGLNNLNRGMVLGSLAATVRLQAGNATEVPANSTVLSFCAFAVDAAKAYKDYLASGGQPITNCVKMLCTHTGTGQAITVTPEANMDQESFGGASCCLYCRCHIDHPNPKGFCDLKGKYVQIPTTCANDPVGFTLKNTVCTVCGMWKGYGCSCDQLREPMLQSADAQSFLNGFAV', 'LEKTTELLFLVMFLLTTKRTMFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHAIHVSGTNGTKRFDNPVLPFNDGVYFASTEKSNIIRGWIFGTTLDSKTQSLLIVNNATNVVIKVCEFQFCNDPFLGVYYHKNNKSWMESEFRVYSSANNCTFEYVSQPFLMDLEGKQGNFKNLREFVFKNIDGYFKIYSKHTPINLVRDLPQGFSALEPLVDLPIGINITRFQTLLALHRSYLTPGDSSSGWTAGAAAYYVGYLQPRTFLLKYNENGTITDAVDCALDPLSETKCTLKSFTVEKGIYQTSNFRVQPTESIVRFPNITNLCPFGEVFNATRFASVYAWNRKRISNCVADYSVLYNSASFSTFKCYGVSPTKLNDLCFTNVYADSFVIRGDEVRQIAPGQTGKIADYNYKLPDDFTGCVIAWNSNNLDSKVGGNYNYLYRLFRKSNLKPFERDISTEIYQAGSTPCNGVEGFNCYFPLQSYGFQPTNGVGYQPYRVVVLSFELLHAPATVCGPKKSTNLVKNKCVNFNFNGLTGTGVLTESNKKFLPFQQFGRDIADTTDAVRDPQTLEILDITPCSFGGVSVITPGTNTSNQVAVLYQDVNCTEVPVAIHADQLTPTWRVYSTGSNVFQTRAGCLIGAEHVNNSYECDIPIGAGICASYQTQTNSPRRARSVASQSIIAYTMSLGAENSVAYSNNSIAIPTNFTISVTTEILPVSMTKTSVDCTMYICGDSTECSNLLLQYGSFCTQLNRALTGIAVEQDKNTQEVFAQVKQIYKTPPIKDFGGFNFSQILPDPSKPSKRSFIEDLLFNKVTLADAGFIKQYGDCLGDIAARDLICAQKFNGLTVLPPLLTDEMIAQYTSALLAGTITSGWTFGAGAALQIPFAMQMAYRFNGIGVTQNVLYENQKLIANQFNSAIGKIQDSLSSTASALGKLQDVVNQNAQALNTLVKQLSSNFGAISSVLNDILSRLDKVEAEVQIDRLITGRLQSLQTYVTQQLIRAAEIRASANLAATKMSECVLGQSKRVDFCGKGYHLMSFPQSAPHGVVFLHVTYVPAQEKNFTTAPAICHDGKAHFPREGVFVSNGTHWFVTQRNFYEPQIITTDNTFVSGNCDVVIGIVNNTVYDPLQPELDSFKEELDKYFKNHTSPDVDLGDISGINASVVNIQKEIDRLNEVAKNLNESLIDLQELGKYEQYIKWPWYIWLGFIAGLIAIVMVTIMLCCMTSCCSCLKGCCSCGSCCKFDEDDSEPVLKGVKLHYT', 'RSCCFRFHLNEQTKMSDNGPQNQRNAPRITFGGPSDSTGSNQNGERSGARSKQRRPQGLPNNTASWFTALTQHGKEDLKFPRGQGVPINTNSSPDDQIGYYRRATRRIRGGDGKMKDLSPRWYFYYLGTGPEAGLPYGANKDGIIWVATEGALNTPKDHIGTRNPANNAAIVLQLPQGTTLPKGFYAEGSRGGSQASSRSSSRSRNSSRNSTPGSSRGTSPARMAGNGGDAALALLLLDRLNQLESKMSGKGQQQQGQTVTKKSAAEASKKPRQKRTATKAYNVTQAFGRRGPEQTQGNFGDQELIRQGTDYKHWPQIAQFAPSASAFFGMSRIGMEVTPSGTWLTYTGAIKLDDKDPNFKDQVILLNKHIDAYKTFPPTEPKKDKKKKADETQALPQRQKKQQTVTLLPAADLDDFSKQLQQSMSSADSTQA', 'TACTCLKNIRTCRINTPSRSKLICMNSNRDFCAVNILIKNSNLVRSICSWCYNTDTTKRTWCNVKNLKCLWITDSISSVSNVSAKLLERQKLFVRLSKNTCAC', 'FGCCCKRYYVQGNTTISCIVDNVVECIIIQLSKHSEKHCLHSTSNFCPLVLRSSLFIHLGHSLISHLFQLTLHGCITVKFRFSHIQRLLQLFKNNFRITISNSLLISFLSSSKSCI', 'FRYWLQSFYDSICHNTGELIYFCTEFNCIGRALLIKYFINPFIKFKSDIHTLVTLHFYHSVITKSNLCWCTAFECEGIVCYHHIRCKGTVLFCVFDFEQHKPVNTNWCTNQWSFNSFTSRLF', 'FLFTNIPGTFFSFSFCNFKITTGFNNLFECFIIQTFHSFHKSTCGSRKRCQNNGDLFIKFKVTNNIDVDFLFLEYFKKVVIKTFGTFSNNTCMVTTYVSASTWNPIGTLVMATNIREHTASKGNSATTLTKNGFQARFIMVFGKTMLRSYF', 'IRRPSPYLLLITLLMLLLKSVNFNFVMIHFWVFITTKTTKVGWKVSSEFILVRIIALLNMSLSLFLWTLKENRVISKILGNLCLRILMVILKYILSTRLLI', 'SSGLNELNIILVFLFGTLILAMADSNGTITVEELKKLLEQWNLVIGFLFLTWICLLQFAYANRNRFLYIIKLIFLWLLWPVTLACFVLAAVYRINWITGGIAIAMACLVGLMWLSYFIASFRLFARTRSMWSFNPETNILLNVPLHGTILTRPLLESELVIGAVILRGHLRIAGHHLGRCDIKDLPKEITVATSRTLSYYKLGASQRVAGDSGFAAYSRYRIGNYKLNTDHSSSSDNIALLVQ', 'TNMKFLVFLGIITTVAAFHQECSLQSCTQHQPYVVDDPCPIHFYSKWYIRVGARKSAPLIELCVDEAGSKSPIQYIDIGNYTVSCLPFTINCQEPKLGSLVVRCSFYEDFLEYHDVRVVLDFI', 'TNKLKCLIMDPKISEMHPALRLVDPQIQLAVTRMENAVGRDQNNVGPKVYPIILRLGSPLSLNMARKTLNSLEDKAFQLTPIAVQMTKLATTEELPDEFVVVTVK', 'SVPCLISSWSPKFPWVCSGPRLPKACVTLYALVAVRFCRGFLEASAADFLVTVWPCCCWPLPDILLSSWFNLSSSSKARAASPPLPAILAGEVPLLLPGVEFLELLRLRDEEREEA', 'RTATWLEVFVPGVITLTPPKEHGVMSRISSVCGSRTASVVSAMSLPNCWKGRNFLLDSVRTPVPVKPLKLKLTHLFLTKLVDFLGPQTVAGACRSSKESTTTLYGW', 'AAIRSVWPTSSVIFKLLFAGLSIMSPTTSVVFTLHSRTSFCMVGFSTTSSETGFRSSQARLSIPCASSDFSTSNEFDVSTGFVLQRQRIHQVFGLYVALLVALLTCQTIGLCNNLAPFLKEGV', 'PCTSITVSSPKVTFVGAPPLSVKVLFVTIILGARAQYFSVSLISSNISPLIQTGVPTNGASTASLVGCSNGCKSPVFKTTSSVNTSVGSVSPSKKIISFGAFRGMSRPVSSLDLTHFLYNPFECVTNVSPKFKALSLAPPIMIESAHKAKNLFTSLKNV']\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\n\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\n## Code for Q6",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Feb 7<sup>th</sup> -- UQ PUG 5"
    ]
  },
  {
    "objectID": "2024 - Archive/05-Feb24.html#structure",
    "href": "2024 - Archive/05-Feb24.html#structure",
    "title": "2024 Feb 7th – UQ PUG 5",
    "section": "",
    "text": "We start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Feb 7<sup>th</sup> -- UQ PUG 5"
    ]
  },
  {
    "objectID": "2024 - Archive/05-Feb24.html#mailing-list",
    "href": "2024 - Archive/05-Feb24.html#mailing-list",
    "title": "2024 Feb 7th – UQ PUG 5",
    "section": "",
    "text": "If you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Feb 7<sup>th</sup> -- UQ PUG 5"
    ]
  },
  {
    "objectID": "2024 - Archive/05-Feb24.html#training-resources",
    "href": "2024 - Archive/05-Feb24.html#training-resources",
    "title": "2024 Feb 7th – UQ PUG 5",
    "section": "",
    "text": "We offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Feb 7<sup>th</sup> -- UQ PUG 5"
    ]
  },
  {
    "objectID": "2024 - Archive/05-Feb24.html#introduce-yourself",
    "href": "2024 - Archive/05-Feb24.html#introduce-yourself",
    "title": "2024 Feb 7th – UQ PUG 5",
    "section": "",
    "text": "What’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nNida\nSCMB\nlearning about python\n\n\nCameron West\nUQ Library / SMP\nTo help with Python!\n\n\nSonia\nColombia/Master of Business\nImproving Python Skills\n\n\nElizabeth\nLecturer of Finance, UQ Business School\nJust to learn about Python for my research projects\n\n\nLily\nUQ BA student\nto learn how to use python handling data",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Feb 7<sup>th</sup> -- UQ PUG 5"
    ]
  },
  {
    "objectID": "2024 - Archive/05-Feb24.html#questions",
    "href": "2024 - Archive/05-Feb24.html#questions",
    "title": "2024 Feb 7th – UQ PUG 5",
    "section": "",
    "text": "If you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\n\nHow can we use AI coding tools such as chatGPT help us learn Python more efficiently?\n## Code for Q1\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\nI want to: check the first occurence of the letter M in my strings (that can be 200 characters long, that’s why I don’t want to do it manually)\nsuppose I have this strings: aminoacid_seq = ‘SSSSATTVMHSSIVLATVLFVAIASASKTRELCMKSLEHAKVGTSKEAKQDGIDLYKHMFEHYPAMKKYFKHRENYTPADVQKDPFFIKQGQNILLACHVLCATYDDRETFDAYVGELMARHERDHVKVPNDVWNHFWEHFIEFLGSKTTLDEPTKHAWQEIGKEFSHEISHHGRHSVRDHCMNSLEYIAIGDKEHQKQNGIDLYKHMFEHYPHMRKAFKGRENFTKEDVQKDAFFVNKDTRFCWPFVCCDSSYDDEPTFDYFVDALMDRHIKDDIHLPQEQWHEFWKLFAEYLNEKSHQHLTEAEKHAWSTIGEDFAHEADKHAKAEKDHHEGEHKEEHH’\nIf I use this code:\nM_loc = aminoacids_seq[0].find(‘M’) print(M_loc) print(len(aminoacids_seq[0]))\nam I correct?\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Feb  1 10:56:35 2024\n\n@author: uqcwest5\n\"\"\"\n\n# Initial problem\n\naminoacids_seq = 'SSSSATTVMHSSIVLATVLFVAIASASKTRELCMKSLEHAKVGTSKEAKQDGIDLYKHMFEHYPAMKKYFKHRENYTPADVQKDPFFIKQGQNILLACHVLCATYDDRETFDAYVGELMARHERDHVKVPNDVWNHFWEHFIEFLGSKTTLDEPTKHAWQEIGKEFSHEISHHGRHSVRDHCMNSLEYIAIGDKEHQKQNGIDLYKHMFEHYPHMRKAFKGRENFTKE*DVQKDAFFVNKDTRFCWPFVCCDSSYDDEPTFDYFVDALMDRHIKDDIHLPQEQWHEFWKLFAEYLNEKSHQHLTEAEKHAWSTIGEDFAHEADKHAKAEKDHHEGEHKEEHH'\n\nM_loc = aminoacids_seq.find('M')\nend_loc = aminoacids_seq.find('*')\n\naminoacids_seq[M_loc:end_loc + 1]\n\n# New problem\n# Count all the Ms\n# Turn every section between Ms into a separate substring\n\nimport pandas as pd\n\ncount_M = aminoacids_seq.count(\"M\")\n\nM_start = aminoacids_seq.find('M')\nM_end = aminoacids_seq.find('M', M_start + 1)\n\nproteins = [aminoacids_seq[M_start:M_end]]\n\nfor i in range(1, count_M):\n    M_start = M_end\n    M_end = aminoacids_seq.find('M', M_start + 1)\n    \n    proteins.append(aminoacids_seq[M_start:M_end])\n    \npd.Series(proteins).to_csv(\"proteins.csv\")\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\n## Code for Q3\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\n## Code for Q4\ncorrect_ORF = []        \nfor seq in protseq_true:\n    m_pos = seq.find(\"M\")  \n    m_end_seq = seq[m_pos:]\n    if len(m_end_seq) &gt; 100:\n        print(m_end_seq)\n        print(len(m_end_seq))\n        correct_ORF.append(m_end_seq)\n        \n# fyi\nprotseq_true = ['CTIVFKRVCGVSAARLTPCGTGTSTDVVYRAFDIYNDKVAGFAKFLKTNCCRFQEKDEDDNLIDSYFVVKRHTFSNYQHEETIYNLLKDCPAVAKHDFFKFRIDGDMVPHISRQRLTKYTMADLVYALRHFDEGNCDTLKEILVTYNCCDDDYFNKKDWYDFVENPDILRVYANLGERVRQALLKTVQFCDAMRNAGIVGVLTLDNQDLNGNWYDFGDFIQTTPGSGVPVVDSYYSLLMPILTLTRALTAESHVDTDLTKPYIKWDLLKYDFTEERLKLFDRYFKYWDQTYHPNCVNCLDDRCILHCANFNVLFSTVFPPTSFGPLVRKIFVDGVPFVVSTGYHFRELGVVHNQDVNLHSSRLSFKELLVYAADPAMHAASGNLLLDKRTTCFSVAALTNNVAFQTVKPGNFNKDFYDFAVSKGFFKEGSSVELKHFFFAQDGNAAISDYDYYRYNLPTMCDIRQLLFVVEVVDKYFDCYDGGCINANQVIVNNLDKSAGFPFNKWGKARLYYDSMSYEDQDALFAYTKRNVIPTITQMNLKYAISAKNRARTVAGVSICSTMTNRQFHQKLLKSIAATRGATVVIGTSKFYGGWHNMLKTVYSDVENPHLMGWDYPKCDRAMPNMLRIMASLVLARKHTTCCSLSHRFYRLANECAQVLSEMVMCGGSLYVKPGGTSSGDATTAYANSVFNICQAVTANVNALLSTDGNKIADKYVRNLQHRLYECLYRNRDVDTDFVNEFYAYLRKHFSMMILSDDAVVCFNSTYASQGLVASIKNFKSVLYYQNNVFMSEAKCWTETDLTKGPHEFCSQHTMLVKQGDDYVYLPYPDPSRILGAGCFVDDIVKTDGTLMIERFVSLAIDAYPLTKHPNQEYADVFHLYLQYIRKLHDELTGHMLDMYSVMLTNDNTSRYWEPEFYEAMYTPHTVLQAVGACVLCNSQTSLRCGACIRRPFLCCKCCYDHVISTSHKLVLSVNPYVCNAPGCDVTDVTQLYLGGMSYYCKSHKPPISFPLCANGQVFGLYKNTCVGSDNVTDFNAIATCDWTNAGDYILANTCTERLKLFAAETLKATEETFKLSYGIATVREVLSDRELHLSWEVGKPRPPLNRNYVFTGYRVTKNSKVQIGEYTFEKGDYGDAVVYRGTTTYKLNVGDYFVLTSHTVMPLSAPTLVPQEHYVRITGLYPTLNISDEFSSNVANYQKVGMQKYSTLQGPPGTGKSHFAIGLALYYPSARIVYTACSHAAVDALCEKALKYLPIDKCSRIIPARARVECFDKFKVNSTLEQYVFCTVNALPETTADIVVFDEISMATNYDLSVVNARLRAKHYVYIGDPAQLPAPRTLLTKGTLEPEYFNSVCRLMKTIGPDMFLGTCRRCPAEIVDTVSALVYDNKLKAHKDKSAQCFKMFYKGVITHDVSSAINRPQIGVVREFLTRNPAWRKAVFISPYNSQNAVASKILGLPTQTVDSSQGSEYDYVIFTQTTETAHSCNVNRFNVAITRAKVGILCIMSDRDLYDKLQFTSLEIPRRNVATLQAENVTGLFKDCSKVITGLHPTQAPTHLSVDTKFKTEGLCVDIPGIPKDMTYRRLISMMGFKMNYQVNGYPNMFITREEAIRHVRAWIGFDVEGCHATREAVGTNLPLQLGFSTGVNLVAVPTGYVDTPNNTDFSRVSAKPPPGDQFKHLIPLMYKGLPWNVVRIKIVQMLSDTLKNLSDRVVFVLWAHGFELTSMKYFVKIGPERTCCLCDRRATCFSTASDTYACWHHSIGFDYVYNPFMIDVQQWGFTGNLQSNHDLYCQVHGNAHVASCDAIMTRCLAVHECFVKRVDWTIEYPIIGDELKINAACRKVQHMVVKAALLADKFPVLHDIGNPKAIKCVPQADVEWKFYDAQPCSDKAYKIEELFYSYATHSDKFTDGVCLFWNCNVDRYPANSIVCRFDTRVLSNLNLPGCDGGSLYVNKHAFHTPAFDKSAFVNLKQLPFFYYSDSPCESHGKQVVSDIDYVPLKSATCITRCNLGGAVCRHHANEYRLYLDAYNMMISAGFSLWVYKQFDTYNLWNTFTRLQSLENVAFNVVNKGHFDGQQGEVPVSIINNTVYTKVDGVDVELFENKTTLPVNVAFELWAKRNIKPVPEVKILNNLGVDIAANTVIWDYKRDAPAHISTIGVCSMTDIAKKPTETICAPLTVFFDGRVDGQVDLFRNARNGVLITEGSVKGLQPSVGPKQASLNGVTLIGEAVKTQFNYYKKVDGVVQQLPETYFTQSRNLQEFKPRSQMEIDFLELAMDEFIERYKLEGYAFEHIVYGDFSHSQLGGLHLLIGLAKRFKESPFELEDFIPMDSTVKNYFITDAQTGSSKCVCSVIDLLLDDFVEIIKSQDLSVVSKVVKVTIDYTEISFMLWCKDGHVETFYPKLQSSQAWQPGVAMPNLYKMQRMLLEKCDLQNYGDSATLPKGIMMNVAKYTQLCQYLNTLTLAVPYNMRVIHFGAGSDKGVAPGTAVLRQWLPTGTLLVDSDLNDFVSDADSTLIGDCATVHTANKWDLIISDMYDPKTKNVTKENDSKEGFFTYICGFIQQKLALGGSVAIKITEHSWNADLYKLMGHFAWWTAFVTNVNASSSEAFLIGCNYLGKPREQIDGYVMHANYIFWRNTNPIQLSSYSLFDMSKFPLKLRGTAVMSLKEGQINDMILSLLSKGRLIIRENNRVVISSDVLVNN', 'ASAQRSQITLHINELMDLFMRIFTIGTVTLKQGEIKDATPSDFVRATATIPIQASLPFGWLIVGVALLAVFQSASKIITLKKRWQLALSKGVHFVCNLLLLFVTVYSHLLLVAAGLEAPFLYLYALVYFLQSINFVRIIMRLWLCWKCRSKNPLLYDANYFLCWHTNCYDYCIPYNSVTSSIVITSGDGTTSPISEHDYQIGGYTEKWESGVKDCVVLHSYFTSDYYQLYSTQLSTDTGVEHVTFFIYNKIVDEPEEHVQIHTIDGSSGVVNPVMEPIYDEPTTTTSVPL', 'TNMKIILFLALITLATCELYHYQECVRGTTVLLKEPCSSGTYEGNSPFHPLADNKFALTCFSTQFAFACPDGVKHVYQLRARSVSPKLFIRQEEVQELYSPIFLIVAAIVFITLCFTLKRKTE', 'PKGKMESLVPGFNEKTHVQLSLPVLQVRDVLVRGFGDSVEEVLSEARQHLKDGTCGLVEVEKGVLPQLEQPYVFIKRSDARTAPHGHVMVELVAELEGIQYGRSGETLGVLVPHVGEIPVAYRKVLLRKNGNKGAGGHSYGADLKSFDLGDELGTDPYEDFQENWNTKHSSGVTRELMRELNGGAYTRYVDNNFCGPDGYPLECIKDLLARAGKASCTLSEQLDFIDTKRGVYCCREHEHEIAWYTERSEKSYELQTPFEIKLAKKFDTFNGECPNFVFPLNSIIKTIQPRVEKKKLDGFMGRIRSVYPVASPNECNQMCLSTLMKCDHCGETSWQTGDFVKATCEFCGTENLTKEGATTCGYLPQNAVVKIYCPACHNSEVGPEHSLAEYHNESGLKTILRKGGRTIAFGGCVFSYVGCHNKCAYWVPRASANIGCNHTGVVGEGSEGLNDNLLEILQKEKVNINIVGDFKLNEEIAIILASFSASTSAFVETVKGLDYKAFKQIVESCGNFKVTKGKAKKGAWNIGEQKSILSPLYAFASEAARVVRSIFSRTLETAQNSVRVLQKAAITILDGISQYSLRLIDAMMFTSDLATNNLVVMAYITGGVVQLTSQWLTNIFGTVYEKLKPVLDWLEEKFKEGVEFLRDGWEIVKFISTCACEIVGGQIVTCAKEIKESVQTFFKLVNKFLALCADSIIIGGAKLKALNLGETFVTHSKGLYRKCVKSREETGLLMPLKAPKEIIFLEGETLPTEVLTEEVVLKTGDLQPLEQPTSEAVEAPLVGTPVCINGLMLLEIKDTEKYCALAPNMMVTNNTFTLKGGAPTKVTFGDDTVIEVQGYKSVNITFELDERIDKVLNEKCSAYTVELGTEVNEFACVVADAVIKTLQPVSELLTPLGIDLDEWSMATYYLFDESGEFKLASHMYCSFYPPDEDEEEGDCEEEEFEPSTQYEYGTEDDYQGKPLEFGATSAALQPEEEQEEDWLDDDSQQTVGQQDGSEDNQTTTIQTIVEVQPQLEMELTPVVQTIEVNSFSGYLKLTDNVYIKNADIVEEAKKVKPTVVVNAANVYLKHGGGVAGALNKATNNAMQVESDDYIATNGPLKVGGSCVLSGHNLAKHCLHVVGPNVNKGEDIQLLKSAYENFNQHEVLLAPLLSAGIFGADPIHSLRVCVDTVRTNVYLAVFDKNLYDKLVSSFLEMKSEKQVEQKIAEIPKEEVKPFITESKPSVEQRKQDDKKIKACVEEVTTTLEETKFLTENLLLYIDINGNLHPDSATLVSDIDITFLKKDAPYIVGDVVQEGVLTAVVIPTKKAGGTTEMLAKALRKVPTDNYITTYPGQGLNGYTVEEAKTVLKKCKSAFYILPSIISNEKQEILGTVSWNLREMLAHAEETRKLMPVCVETKAIVSTIQRKYKGIKIQEGVVDYGARFYFYTSKTTVASLINTLNDLNETLVTMPLGYVTHGLNLEEAARYMRSLKVPATVSVSSPDAVTAYNGYLTSSSKTPEEHFIETISLAGSYKDWSYSGQSTQLGIEFLKRGDKSVYYTSNPTTFHLDGEVITFDNLKTLLSLREVRTIKVFTTVDNINLHTQVVDMSMTYGQQFGPTYLDGADVTKIKPHNSHEGKTFYVLPNDDTLRVEAFEYYHTTDPSFLGRYMSALNHTKKWKYPQVNGLTSIKWADNNCYLATALLTLQQIELKFNPPALQDAYYRARAGEAANFCALILAYCNKTVGELGDVRETMSYLFQHANLDSCKRVLNVVCKTCGQQQTTLKGVEAVMYMGTLSYEQFKKGVQIPCTCGKQATKYLVQQESPFVMMSAPPAQYELKHGTFTCASEYTGNYQCGHYKHITSKETLYCIDGALLTKSSEYKGPITDVFYKENSYTTTIKPVTYKLDGVVCTEIDPKLDNYYKKDNSYFTEQPIDLVPNQPYPNASFDNFKFVCDNIKFADDLNQLTGYKKPASRELKVTFFPDLNGDVVAIDYKHYTPSFKKGAKLLHKPIVWHVNNATNKATYKPNTWCIRCLWSTKPVETSNSFDVLKSEDAQGMDNLACEDLKPVSEEVVENPTIQKDVLECNVKTTEVVGDIILKPANNSLKITEEVGHTDLMAAYVDNSSLTIKKPNELSRVLGLKTLATHGLAAVNSVPWDTIANYAKPFLNKVVSTTTNIVTRCLNRVCTNYMPYFFTLLLQLCTFTRSTNSRIKASMPTTIAKNTVKSVGKFCLEASFNYLKSPNFSKLINIIIWFLLLSVCLGSLIYSTAALGVLMSNLGMPSYCTGYREGYLNSTNVTIATYCTGSIPCSVCLSGLDSLDTYPSLETIQITISSFKWDLTAFGLVAEWFLAYILFTRFFYVLGLAAIMQLFFSYFAVHFISNSWLMWLIINLVQMAPISAMVRMYIFFASFYYVWKSYVHVVDGCNSSTCMMCYKRNRATRVECTTIVNGVRRSFYVYANGGKGFCKLHNWNCVNCDTFCAGSTFISDEVARDLSLQFKRPINPTDQSSYIVDSVTVKNGSIHLYFDKAGQKTYERHSLSHFVNLDNLRANNTKGSLPINVIVFDGKSKCEESSAKSASVYYSQLMCQPILLLDQALVSDVGDSAEVAVKMFDAYVNTFSSTFNVPMEKLKTLVATAEAELAKNVSLDNVLSTFISAARQGFVDSDVETKDVVECLKLSHQSDIEVTGDSCNNYMLTYNKVENMTPRDLGACIDCSARHINAQVAKSHNIALIWNVKDFMSLSEQLRKQIRSAAKKNNLPFKLTCATTRQVVNVVTTKIALKGGKIVNNWLKQLIKVTLVFLFVAAIFYLITPVHVMSKHTDFSSEIIGYKAIDGGVTRDIASTDTCFANKHADFDTWFSQRGGSYTNDKACPLIAAVITREVGFVVPGLPGTILRTTNGDFLHFLPRVFSAVGNICYTPSKLIEYTDFATSACVLAAECTIFKDASGKPVPYCYDTNVLEGSVAYESLRPDTRYVLMDGSIIQFPNTYLEGSVRVVTTFDSEYCRHGTCERSEAGVCVSTSGRWVLNNDYYRSLPGVFCGVDAVNLLTNMFTPLIQPIGALDISASIVAGGIVAIVVTCLAYYFMRFRRAFGEYSHVVAFNTLLFLMSFTVLCLTPVYSFLPGVYSVIYLYLTFYLTNDVSFLAHIQWMVMFTPLVPFWITIAYIICISTKHFYWFFSNYLKRRVVFNGVSFSTFEEAALCTFLLNKEMYLKLRSDVLLPLTQYNRYLALYNKYKYFSGAMDTTSYREAACCHLAKALNDFSNSGSDVLYQPPQTSITSAVLQSGFRKMAFPSGKVEGCMVQVTCGTTTLNGLWLDDVVYCPRHVICTSEDMLNPNYEDLLIRKSNHNFLVQAGNVQLRVIGHSMQNCVLKLKVDTANPKTPKYKFVRIQPGQTFSVLACYNGSPSGVYQCAMRPNFTIKGSFLNGSCGSVGFNIDYDCVSFCYMHHMELPTGVHAGTDLEGNFYGPFVDRQTAQAAGTDTTITVNVLAWLYAAVINGDRWFLNRFTTTLNDFNLVAMKYNYEPLTQDHVDILGPLSAQTGIAVLDMCASLKELLQNGMNGRTILGSALLEDEFTPFDVVRQCSGVTFQSAVKRTIKGTHHWLLLTILTSLLVLVQSTQWSLFFFLYENAFLPFAMGIIAMSAFAMMFVKHKHAFLCLFLLPSLATVAYFNMVYMPASWVMRIMTWLDMVDTSLSGFKLKDCVMYASAVVLLILMTARTVYDDGARRVWTLMNVLTLVYKVYYGNALDQAISMWALIISVTSNYSGVVTTVMFLARGIVFMCVEYCPIFFITGNTLQCIMLVYCFLGYFCTCYFGLFCLLNRYFRLTLGVYDYLVSTQEFRYMNSQGLLPPKNSIDAFKLNIKLLGVGGKPCIKVATVQSKMSDVKCTSVVLLSVLQQLRVESSSKLWAQCVQLHNDILLAKDTTEAFEKMVSLLSVLLSMQGAVDINKLCEEMLDNRATLQAIASEFSSLPSYAAFATAQEAYEQAVANGDSEVVLKKLKKSLNVAKSEFDRDAAMQRKLEKMADQAMTQMYKQARSEDKRAKVTSAMQTMLFTMLRKLDNDALNNIINNARDGCVPLNIIPLTTAAKLMVVIPDYNTYKNTCDGTTFTYASALWEIQQVVDADSKIVQLSEISMDNSPNLAWPLIVTALRANSAVKLQNNELSPVALRQMSCAAGTTQTACTDDNALAYYNTTKGGRFVLALLSDLQDLKWARFPKSDGTGTIYTELEPPCRFVTDTPKGPKVKYLYFIKGLNNLNRGMVLGSLAATVRLQAGNATEVPANSTVLSFCAFAVDAAKAYKDYLASGGQPITNCVKMLCTHTGTGQAITVTPEANMDQESFGGASCCLYCRCHIDHPNPKGFCDLKGKYVQIPTTCANDPVGFTLKNTVCTVCGMWKGYGCSCDQLREPMLQSADAQSFLNGFAV', 'LEKTTELLFLVMFLLTTKRTMFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHAIHVSGTNGTKRFDNPVLPFNDGVYFASTEKSNIIRGWIFGTTLDSKTQSLLIVNNATNVVIKVCEFQFCNDPFLGVYYHKNNKSWMESEFRVYSSANNCTFEYVSQPFLMDLEGKQGNFKNLREFVFKNIDGYFKIYSKHTPINLVRDLPQGFSALEPLVDLPIGINITRFQTLLALHRSYLTPGDSSSGWTAGAAAYYVGYLQPRTFLLKYNENGTITDAVDCALDPLSETKCTLKSFTVEKGIYQTSNFRVQPTESIVRFPNITNLCPFGEVFNATRFASVYAWNRKRISNCVADYSVLYNSASFSTFKCYGVSPTKLNDLCFTNVYADSFVIRGDEVRQIAPGQTGKIADYNYKLPDDFTGCVIAWNSNNLDSKVGGNYNYLYRLFRKSNLKPFERDISTEIYQAGSTPCNGVEGFNCYFPLQSYGFQPTNGVGYQPYRVVVLSFELLHAPATVCGPKKSTNLVKNKCVNFNFNGLTGTGVLTESNKKFLPFQQFGRDIADTTDAVRDPQTLEILDITPCSFGGVSVITPGTNTSNQVAVLYQDVNCTEVPVAIHADQLTPTWRVYSTGSNVFQTRAGCLIGAEHVNNSYECDIPIGAGICASYQTQTNSPRRARSVASQSIIAYTMSLGAENSVAYSNNSIAIPTNFTISVTTEILPVSMTKTSVDCTMYICGDSTECSNLLLQYGSFCTQLNRALTGIAVEQDKNTQEVFAQVKQIYKTPPIKDFGGFNFSQILPDPSKPSKRSFIEDLLFNKVTLADAGFIKQYGDCLGDIAARDLICAQKFNGLTVLPPLLTDEMIAQYTSALLAGTITSGWTFGAGAALQIPFAMQMAYRFNGIGVTQNVLYENQKLIANQFNSAIGKIQDSLSSTASALGKLQDVVNQNAQALNTLVKQLSSNFGAISSVLNDILSRLDKVEAEVQIDRLITGRLQSLQTYVTQQLIRAAEIRASANLAATKMSECVLGQSKRVDFCGKGYHLMSFPQSAPHGVVFLHVTYVPAQEKNFTTAPAICHDGKAHFPREGVFVSNGTHWFVTQRNFYEPQIITTDNTFVSGNCDVVIGIVNNTVYDPLQPELDSFKEELDKYFKNHTSPDVDLGDISGINASVVNIQKEIDRLNEVAKNLNESLIDLQELGKYEQYIKWPWYIWLGFIAGLIAIVMVTIMLCCMTSCCSCLKGCCSCGSCCKFDEDDSEPVLKGVKLHYT', 'RSCCFRFHLNEQTKMSDNGPQNQRNAPRITFGGPSDSTGSNQNGERSGARSKQRRPQGLPNNTASWFTALTQHGKEDLKFPRGQGVPINTNSSPDDQIGYYRRATRRIRGGDGKMKDLSPRWYFYYLGTGPEAGLPYGANKDGIIWVATEGALNTPKDHIGTRNPANNAAIVLQLPQGTTLPKGFYAEGSRGGSQASSRSSSRSRNSSRNSTPGSSRGTSPARMAGNGGDAALALLLLDRLNQLESKMSGKGQQQQGQTVTKKSAAEASKKPRQKRTATKAYNVTQAFGRRGPEQTQGNFGDQELIRQGTDYKHWPQIAQFAPSASAFFGMSRIGMEVTPSGTWLTYTGAIKLDDKDPNFKDQVILLNKHIDAYKTFPPTEPKKDKKKKADETQALPQRQKKQQTVTLLPAADLDDFSKQLQQSMSSADSTQA', 'TACTCLKNIRTCRINTPSRSKLICMNSNRDFCAVNILIKNSNLVRSICSWCYNTDTTKRTWCNVKNLKCLWITDSISSVSNVSAKLLERQKLFVRLSKNTCAC', 'FGCCCKRYYVQGNTTISCIVDNVVECIIIQLSKHSEKHCLHSTSNFCPLVLRSSLFIHLGHSLISHLFQLTLHGCITVKFRFSHIQRLLQLFKNNFRITISNSLLISFLSSSKSCI', 'FRYWLQSFYDSICHNTGELIYFCTEFNCIGRALLIKYFINPFIKFKSDIHTLVTLHFYHSVITKSNLCWCTAFECEGIVCYHHIRCKGTVLFCVFDFEQHKPVNTNWCTNQWSFNSFTSRLF', 'FLFTNIPGTFFSFSFCNFKITTGFNNLFECFIIQTFHSFHKSTCGSRKRCQNNGDLFIKFKVTNNIDVDFLFLEYFKKVVIKTFGTFSNNTCMVTTYVSASTWNPIGTLVMATNIREHTASKGNSATTLTKNGFQARFIMVFGKTMLRSYF', 'IRRPSPYLLLITLLMLLLKSVNFNFVMIHFWVFITTKTTKVGWKVSSEFILVRIIALLNMSLSLFLWTLKENRVISKILGNLCLRILMVILKYILSTRLLI', 'SSGLNELNIILVFLFGTLILAMADSNGTITVEELKKLLEQWNLVIGFLFLTWICLLQFAYANRNRFLYIIKLIFLWLLWPVTLACFVLAAVYRINWITGGIAIAMACLVGLMWLSYFIASFRLFARTRSMWSFNPETNILLNVPLHGTILTRPLLESELVIGAVILRGHLRIAGHHLGRCDIKDLPKEITVATSRTLSYYKLGASQRVAGDSGFAAYSRYRIGNYKLNTDHSSSSDNIALLVQ', 'TNMKFLVFLGIITTVAAFHQECSLQSCTQHQPYVVDDPCPIHFYSKWYIRVGARKSAPLIELCVDEAGSKSPIQYIDIGNYTVSCLPFTINCQEPKLGSLVVRCSFYEDFLEYHDVRVVLDFI', 'TNKLKCLIMDPKISEMHPALRLVDPQIQLAVTRMENAVGRDQNNVGPKVYPIILRLGSPLSLNMARKTLNSLEDKAFQLTPIAVQMTKLATTEELPDEFVVVTVK', 'SVPCLISSWSPKFPWVCSGPRLPKACVTLYALVAVRFCRGFLEASAADFLVTVWPCCCWPLPDILLSSWFNLSSSSKARAASPPLPAILAGEVPLLLPGVEFLELLRLRDEEREEA', 'RTATWLEVFVPGVITLTPPKEHGVMSRISSVCGSRTASVVSAMSLPNCWKGRNFLLDSVRTPVPVKPLKLKLTHLFLTKLVDFLGPQTVAGACRSSKESTTTLYGW', 'AAIRSVWPTSSVIFKLLFAGLSIMSPTTSVVFTLHSRTSFCMVGFSTTSSETGFRSSQARLSIPCASSDFSTSNEFDVSTGFVLQRQRIHQVFGLYVALLVALLTCQTIGLCNNLAPFLKEGV', 'PCTSITVSSPKVTFVGAPPLSVKVLFVTIILGARAQYFSVSLISSNISPLIQTGVPTNGASTASLVGCSNGCKSPVFKTTSSVNTSVGSVSPSKKIISFGAFRGMSRPVSSLDLTHFLYNPFECVTNVSPKFKALSLAPPIMIESAHKAKNLFTSLKNV']\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\n\n\n\n\n\n\n\n\n\n\n\n\nAdd more details here\n## Code for Q6",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Feb 7<sup>th</sup> -- UQ PUG 5"
    ]
  },
  {
    "objectID": "2024 - Archive/07-Apr24.html",
    "href": "2024 - Archive/07-Apr24.html",
    "title": "2024 Apr 11th – UQ PUG 7",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general information for details about who we are and what we do.\nThis month we discussed a basic introduction to Web Scraping using requests and BeautifulSoup.\n\n\n\n\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\n\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.\n\n\n\nWe offer Python training sessions and resources, you can find our introductory guide here.\n\n\n\n\n\n\n\n\n\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron West\nUQ Library / SMP\nTo help, share and learn\n\n\nNicholas Wiggins\nUQ Library\nTo help and Learn\n\n\nTheophilus Mensah\nQAAFI\nTo learn and share\n\n\n\n\n\n\n\nDavid Chau\nQAAFI\nFor Fun\n\n\n\n\n\n\n\nJulia Wood\nUQ HABS\nto learn and meet other python users\n\n\nThu Luong Le\nComArts School\nTo learn about web scraping\n\n\n\n\n\n\n\nTommy Nguyen\nUQ ADP\nTo Learn about Web Scraping + meet others\n\n\n\n\n\n\n\nRyan Leung\nSOE\nLearn python\n\n\nLydeth\nBusiness school\nI do have to pass my CSSE7030 course which is centered around Python and get myself closer to Python?\n\n\nJay\nUQ EAIT\nLearn python and have some inspiration",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Apr 11<sup>th</sup> -- UQ PUG 7"
    ]
  },
  {
    "objectID": "2024 - Archive/07-Apr24.html#overview",
    "href": "2024 - Archive/07-Apr24.html#overview",
    "title": "2024 Apr 11th – UQ PUG 7",
    "section": "",
    "text": "We start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\n\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.\n\n\n\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Apr 11<sup>th</sup> -- UQ PUG 7"
    ]
  },
  {
    "objectID": "2024 - Archive/07-Apr24.html#introduce-yourself",
    "href": "2024 - Archive/07-Apr24.html#introduce-yourself",
    "title": "2024 Apr 11th – UQ PUG 7",
    "section": "",
    "text": "What’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron West\nUQ Library / SMP\nTo help, share and learn\n\n\nNicholas Wiggins\nUQ Library\nTo help and Learn\n\n\nTheophilus Mensah\nQAAFI\nTo learn and share\n\n\n\n\n\n\n\nDavid Chau\nQAAFI\nFor Fun\n\n\n\n\n\n\n\nJulia Wood\nUQ HABS\nto learn and meet other python users\n\n\nThu Luong Le\nComArts School\nTo learn about web scraping\n\n\n\n\n\n\n\nTommy Nguyen\nUQ ADP\nTo Learn about Web Scraping + meet others\n\n\n\n\n\n\n\nRyan Leung\nSOE\nLearn python\n\n\nLydeth\nBusiness school\nI do have to pass my CSSE7030 course which is centered around Python and get myself closer to Python?\n\n\nJay\nUQ EAIT\nLearn python and have some inspiration",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Apr 11<sup>th</sup> -- UQ PUG 7"
    ]
  },
  {
    "objectID": "2024 - Archive/09-Jul24.html",
    "href": "2024 - Archive/09-Jul24.html",
    "title": "2024 July 4th – UQ PUG 9",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info above for how we work and what we do. Below you’ll find the details of this month’s gathering, and below that last month’s.\n\n\nThis month we will be discussing functions and modules - specifically, how to start using them and when they might help!\ndf = pd.read_csv(\"https://raw.githubusercontent.com/resbaz/r-novice-gapminder-files/master/data/gapminder-FiveYearData.csv\")\n\n\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\n\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.\n\n\n\nWe offer Python training sessions and resources, you can find our introductory guide here.\n\n\n\n\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron West\nUQ Library / SMP\nTo help\n\n\nZoe\nUQ",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 July 4<sup>th</sup> -- UQ PUG 9"
    ]
  },
  {
    "objectID": "2024 - Archive/09-Jul24.html#overview",
    "href": "2024 - Archive/09-Jul24.html#overview",
    "title": "2024 July 4th – UQ PUG 9",
    "section": "",
    "text": "This month we will be discussing functions and modules - specifically, how to start using them and when they might help!\ndf = pd.read_csv(\"https://raw.githubusercontent.com/resbaz/r-novice-gapminder-files/master/data/gapminder-FiveYearData.csv\")\n\n\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\n\nIf you would like to be on the mailing list and receive the latest PUG updates, please sign up here:\nhttps://forms.office.com/r/6qvfFX0qGr\nFeel free to send this link to anyone you think may benefit.\n\n\n\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 July 4<sup>th</sup> -- UQ PUG 9"
    ]
  },
  {
    "objectID": "2024 - Archive/09-Jul24.html#introduce-yourself",
    "href": "2024 - Archive/09-Jul24.html#introduce-yourself",
    "title": "2024 July 4th – UQ PUG 9",
    "section": "",
    "text": "What’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron West\nUQ Library / SMP\nTo help\n\n\nZoe\nUQ",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 July 4<sup>th</sup> -- UQ PUG 9"
    ]
  },
  {
    "objectID": "2024 - Archive/13-Nov24.html",
    "href": "2024 - Archive/13-Nov24.html",
    "title": "2024 Nov 7th – UQ PUG 13",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general info for how we work and what we do. Below you’ll find the details of this month’s gathering.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Nov 7<sup>th</sup> -- UQ PUG 13"
    ]
  },
  {
    "objectID": "2024 - Archive/13-Nov24.html#overview",
    "href": "2024 - Archive/13-Nov24.html#overview",
    "title": "2024 Nov 7th – UQ PUG 13",
    "section": "Overview",
    "text": "Overview\nThis month we will be discussing Collaborative User Groups (I know, it’s a bit meta, but we’re at ResBaz!), before our usual workshopping of each other’s questions.\n\nStructure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!\n\n\n\nTeams\nWe have moved from a mailing list to a Teams channel! Opt-in to receive PUG updates\n\n\nHow to use this document\nThis is a Jupyter Notebook, a document format where everything is separated into cells. Each cell contains either markdown, or python.\n\nThe markdown cells allow you to write formatted text\nThe python cells allow you to write AND run python\n\n\nA few tips\n\nDouble click on a cell to edit it\nCTRL + ENTER to run a cell\nPress + Code or + Markdown in the top menu to create new cells. Alternatively, press the buttons between cells\n\n\n\n\nTraining Resources\nWe offer Python training sessions and resources, you can find our introductory guide here.",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Nov 7<sup>th</sup> -- UQ PUG 13"
    ]
  },
  {
    "objectID": "2024 - Archive/13-Nov24.html#introduce-yourself",
    "href": "2024 - Archive/13-Nov24.html#introduce-yourself",
    "title": "2024 Nov 7th – UQ PUG 13",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron\nUQ Library & Physics\nTo share and learn",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Nov 7<sup>th</sup> -- UQ PUG 13"
    ]
  },
  {
    "objectID": "2024 - Archive/13-Nov24.html#questions",
    "href": "2024 - Archive/13-Nov24.html#questions",
    "title": "2024 Nov 7th – UQ PUG 13",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put your question and name in the sections below.\nIf you think you can help, feel free to contribute to the answers section!\n\nQuestion 1: User group experience | Cameron\n\nWhat has worked / not worked for user groups that you have participated in / facilitated?\nIs there anywhere you think a user group could work at your institution?\n\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\n\n\nQuestion 2: What’s wrong with my code | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here! CTRL + ENTER will run the cell\n\nimprt pandas\n\n\n  Cell In[1], line 3\n    imprt pandas\n          ^\nSyntaxError: invalid syntax\n\n\n\n\n\n# Fix the typo\nimport pandas\nprint(\"worked!\")\n\nworked!\n\n\n\nAnswers\n\n\n\nQuestion 3: Question | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\n\n\nQuestion 4: Question | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers\n\n\n\nQuestion 5: Question | Name\nAdd more details here, then press CTRL + ENTER when you’re done\n\n# Put any code you'd like to run here!\n\n\nAnswers",
    "crumbs": [
      "About us",
      "2024 - Archive",
      "2024 Nov 7<sup>th</sup> -- UQ PUG 13"
    ]
  },
  {
    "objectID": "2023 - Archive/1-Sep23.html",
    "href": "2023 - Archive/1-Sep23.html",
    "title": "2023 Sep 7th – UQ PUG 1",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general information for details about who we are and what we do.",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Sep 7<sup>th</sup> -- UQ PUG 1"
    ]
  },
  {
    "objectID": "2023 - Archive/1-Sep23.html#structure",
    "href": "2023 - Archive/1-Sep23.html#structure",
    "title": "2023 Sep 7th – UQ PUG 1",
    "section": "Structure",
    "text": "Structure\n\nWe will start today by having everyone add their names to this page.\nAdd your questions to this page.\nThis Month’s Presentation.\nFinally we will spend the rest of the session answering the questions you have brought!",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Sep 7<sup>th</sup> -- UQ PUG 1"
    ]
  },
  {
    "objectID": "2023 - Archive/1-Sep23.html#this-months-presentation",
    "href": "2023 - Archive/1-Sep23.html#this-months-presentation",
    "title": "2023 Sep 7th – UQ PUG 1",
    "section": "This month’s presentation",
    "text": "This month’s presentation\nWelcome to our first Python User Group gathering! This month, Luke and Cameron give an overview of the group, our vision and Noteable, the interactive collaborative notebook platform which can run markdown, Python, R and SQL.",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Sep 7<sup>th</sup> -- UQ PUG 1"
    ]
  },
  {
    "objectID": "2023 - Archive/1-Sep23.html#introduce-yourself",
    "href": "2023 - Archive/1-Sep23.html#introduce-yourself",
    "title": "2023 Sep 7th – UQ PUG 1",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\n\n\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nLuke\nLibrary\nLearn\n\n\nNick\nLibrary\nLearn\n\n\nValentina Urrutia Guada\nLibrary\nLearn\n\n\nNida\nSchool of Molecular Biology\n(1) Understanding the logic (in some codes) for bioinformatics and metagenomics application, (2) Learn how to visualize data in python that is hard to do in excel\n\n\nCameron\nLibrary\nLearn\n\n\nSam Hames\nSchool of Languages and Cultures\nCommunity\n\n\nNikhil\nSchool of EECS\nLearn\n\n\nPaul Vrbik\nEECS\nSupport\n\n\nJason Dail\nSENV\nLearn\n\n\nAnnie Nguyen\nSENV\nLearn :)",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Sep 7<sup>th</sup> -- UQ PUG 1"
    ]
  },
  {
    "objectID": "2023 - Archive/1-Sep23.html#research-tools",
    "href": "2023 - Archive/1-Sep23.html#research-tools",
    "title": "2023 Sep 7th – UQ PUG 1",
    "section": "Research tools",
    "text": "Research tools\nHere are a few links we shared around, mostly from Jason.\n\nto assist with academic citations\nhttps://researchrabbitapp.com/home helpful when making research collections, mapping concepts, and looking at the linkages between references\nhttps://consensus.app/\nhttps://chat.openai.com/\nhttps://article-summarizer.scholarcy.com/summarizer\nhttps://typeset.io/ AI assistant for reading and understanding papers\nhttps://www.listendata.com/2023/03/how-to-run-chatgpt-inside-excel.html (excel extension for chat GPT how-to)\nEECS tutor help: https://eecs.uq.edu.au/current-students/eecs-learning-centre-tutors",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Sep 7<sup>th</sup> -- UQ PUG 1"
    ]
  },
  {
    "objectID": "2023 - Archive/1-Sep23.html#questions",
    "href": "2023 - Archive/1-Sep23.html#questions",
    "title": "2023 Sep 7th – UQ PUG 1",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put them in a markdown cell, with any code you’d like us to run in a Python cell.\n\nQuestion 1 - Finding substrings for COVID sequencing - Note that the formatting has not transferred correctly here Nida\nNida has a problem where she needs to identify specific substrings from a large sequence of characters (DNA sequence). Her code is below\nI just found out that the code:\ncovid_seq = getSequence('MN908947', 'genbank', DNA_Alphabet)\nis actually trying to get a DNA sequence of covid from genbank & will give output of a string containing 29,900 characters (that we can actually see by clicking on the EBI website below)\nit is use a function called \"getSequence\" with code: `def getSequence(entryId, dbName = ‘uniprotkb’, alphabet = Protein_Alphabet, format = ‘fasta’, debug: bool = True):\nif not isinstance(entryId, str): entryId = entryId.decode(“utf-8”)\nurl =‘http://www.ebi.ac.uk/Tools/dbfetch/dbfetch?style=raw&db=’ + dbName + ‘&format=’ + format + ‘&id=’ + entryId\ntry: if debug: print(‘DEBUG: Querying URL: {0}’.format(url))\ndata = urllib.request.urlopen(url).read() if format == ‘fasta’: return readFastaString(data.decode(“utf-8”), alphabet)[0]\nelse: return data.decode(“utf-8”)\nexcept urllib.error.HTTPError as ex: raise RuntimeError(ex.read())\n`#This function retrieves a single entry from a database (entryId: ID for entry e.g.’MN908947’, dbName: name of database e.g. ‘genbank’)\nonce we got that DNA string (consisting of only 4 types of characters-A/C/T/G), a biologist will translate them (into AminoAcid or Protein string, consisting 20 types of characters + asterisk/* , please see https://www.hgvs.org/mutnomen/codon.html). We’ll translate them using a dictionary (code not shown) and then we’ll split them based on * so that we can generate an output of a list of strings that is stored in a variable called “protseq” (see https://docs.google.com/document/d/1R22IGMfe9i1tYAlPK5ZSOikV-ON6xZVUq-C87xDMiLg/edit?usp=sharing )\nfinally, from that I need to find how many strings inside of that “protseq” that meet these criteria: 1) start with M 2) end with * 3) has length of &gt;=100 characters\nso, my question is actually: how to understand the logic behind the below code that is said to be able to do that job:\n#check first occurence of M in each string of that ‘protseq’ list &gt;&gt;where_M_in_protseq_1st-string = protseq[0].find(‘M’) print(where_M_in_protseq_1st-string) print(len(protseq[0]))\n#code to check whether each string in that ‘protseq’ start with M and &gt;= 100 &gt;&gt;cnt = 0\n\n\nfor i in protseq: &gt;if len(i) - i.find(“M”) &gt;= 100: &gt;&gt;cnt +=1\n\n\n\n\nprint(cnt)\n\n\n\n\nfor seq in protseq: &gt;m_pos = seq.find(“M”)\n&gt;m_end_seq = seq[m_pos:]\n\n\n\n\n\nif len(m_end_seq) &gt; 100: &gt;print(m_end_seq) &gt;print(len(m_end_seq))\n\n\n\nThe answer for this problem should be 8 strings inside 18 members of that protseq list will meet that criteria (so if we can end up getting 8 from that code we are correct)–&gt; (but I just hope that I can get it correct and understand how the code works)\nImportance: from that 8 strings, we can try 1 of them in a real protein database (called Uniprot-KB) and know what part of covid body that is likely to interact with human and causing disease\nThank you very much\n\nimport urllib\n\nclass Alphabet():\n    \"\"\" A minimal class for alphabets\n        Alphabets include DNA, RNA and Protein \"\"\"\n    def __init__(self, symbolString):\n        self.symbols = symbolString\n    def __len__(self):              # implements the \"len\" operator, e.g. \"len(Alphabet('XYZ'))\" results in 3\n        return len(self.symbols)    # will tell you the length of the symbols in an Alphabet instance\n    def __contains__(self, sym):    # implements the \"in\" operator, e.g. \"'A' in Alphabet('ACGT')\" results in True\n        return sym in self.symbols  # will tell you if 'A' is in the symbols in an Alphabet instance\n    def __iter__(self):             # method that allows us to iterate over all symbols, e.g. \"for sym in Alphabet('ACGT'): print sym\" prints A, C, G and T on separate lines\n        tsyms = tuple(self.symbols)\n        return tsyms.__iter__()\n    def __getitem__(self, ndx):\n        \"\"\" Retrieve the symbol(s) at the specified index (or slice of indices) \"\"\"\n        return self.symbols[ndx]\n    def index(self, sym):\n        \"\"\" Retrieve the index of the given symbol in the alphabet. \"\"\"\n        return self.symbols.index(sym)\n    def __str__(self):\n        return self.symbols\n\n\"\"\" Below we declare alphabet variables that are going to be available when\nthis module (this .py file) is imported \"\"\"\nDNA_Alphabet = Alphabet('ACGT')\nRNA_Alphabet = Alphabet('ACGU')\nProtein_Alphabet = Alphabet('ACDEFGHIKLMNPQRSTVWY')\nProtein_wX = Alphabet('ACDEFGHIKLMNPQRSTVWYX')\nProtein_wGAP = Alphabet('ACDEFGHIKLMNPQRSTVWY-')\n\n\ndef getSequence(entryId, dbName = 'uniprotkb', alphabet = Protein_Alphabet, format = 'fasta', debug: bool = True):\n    \"\"\" Retrieve a single entry from a database\n    entryId: ID for entry e.g. 'P63166' or 'SUMO1_MOUSE'\n    dbName: name of database e.g. 'uniprotkb' or 'pdb' or 'refseqn'; see http://www.ebi.ac.uk/Tools/dbfetch/dbfetch/dbfetch.databases for available databases\n    format: file format specific to database e.g. 'fasta' or 'uniprot' for uniprotkb (see http://www.ebi.ac.uk/Tools/dbfetch/dbfetch/dbfetch.databases)\n    See http://www.ebi.ac.uk/Tools/dbfetch/syntax.jsp for more info re URL syntax\n    \"\"\"\n    if not isinstance(entryId, str):\n        entryId = entryId.decode(\"utf-8\")\n    url ='http://www.ebi.ac.uk/Tools/dbfetch/dbfetch?style=raw&db=' + dbName + '&format=' + format + '&id=' + entryId\n    try:\n        if debug:\n            print('DEBUG: Querying URL: {0}'.format(url))\n        data = urllib.request.urlopen(url).read()\n        if format == 'fasta':\n            return readFastaString(data.decode(\"utf-8\"), alphabet)[0]\n        else:\n            return data.decode(\"utf-8\")\n    except urllib.error.HTTPError as ex:\n        raise RuntimeError(ex.read())\n\n\n# get the covid 19 genome (29kB)\ncovid_seq = getSequence('MN908947', 'genbank', DNA_Alphabet)\n# print(seq_no10)\n\n# get all the bases from covid_seq\n# translate all of those base into amino acid seq\n# in all reading frames (6)\n\n\n\n\n\ntr_f = [0, 1, 2]\n# translate protein\ncovid_AAseq = []\n\nfor i in tr_f:\n    #print(\"all ORF in fwd direction\", covid_seq.translateDNA(i, True))\n    seq10b=covid_seq.translateDNA(i, True)\n    protseq=seq10b.split(\"*\")\n    seq10br = covid_seq.translateDNA(i, False)\n    protseq.extend(seq10br.split(\"*\"))\nprint(str(protseq))\n#     print(protseq)\n#     for element in protseq:\n#         print(\"Individual value is\",element)\n# #for i in tr_f:\n#     print(\"all ORF in reverse direction\", covid_seq.translateDNA(i, False))\n    \n#NEXT STEP (for mapping the ORF that begins with M & calculate the len &gt; 100)\nORF = []\nfor i in protseq:\n    if i.startswith('M') == True:\n        ORF.append(i)\nprint('all of potential ORF', ORF)\n\nprint('length of all potential ORF')\nfor i in ORF:\n    print(i, \":\", len(i))\n\ntrue_ORF = []\nfor i in ORF:\n    if len(i) &gt; 100:\n        true_ORF.append(i)\nprint(true_ORF)\n\n# for i in protseq:\n#     if i == 'M': # and len(i) &gt; 100:\n#         ORF.append(i)\n# print(ORF)       \n \n\n\ncharacters = \"asjidowgeriogpjicnjjlaksdjalksdj*alskjdjjjjeosj   hjjjjl\"\n\n# We want to pick out \"jid\" and \"jic\"\nans = []\nfor k, c in enumerate(characters):\n    if c == \"j\":   # add abtrary number of constraints\n        ans.append(characters[k:k+3])\n    if c == \"*\":\n        break\n\nif len(ans[-1]) &lt; 3:\n    ans.pop()\n        \nprint(ans)\n\n\ncharacters = \"asjidowgeriogpjicneosjl\"",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Sep 7<sup>th</sup> -- UQ PUG 1"
    ]
  },
  {
    "objectID": "2023 - Archive/3-Nov23.html",
    "href": "2023 - Archive/3-Nov23.html",
    "title": "2023 Nov 2nd – UQ PUG 3",
    "section": "",
    "text": "Welcome to UQ Python User Group! Check out our general information for details about who we are and what we do.",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Nov 2<sup>nd</sup> -- UQ PUG 3"
    ]
  },
  {
    "objectID": "2023 - Archive/3-Nov23.html#structure",
    "href": "2023 - Archive/3-Nov23.html#structure",
    "title": "2023 Nov 2nd – UQ PUG 3",
    "section": "Structure",
    "text": "Structure\n\nWe start today by adding our names to the table below\nAdd your questions to this page\nThis month’s presentation\nFinally, we spend the rest of the session answering the questions you’ve brought!",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Nov 2<sup>nd</sup> -- UQ PUG 3"
    ]
  },
  {
    "objectID": "2023 - Archive/3-Nov23.html#this-months-presentation",
    "href": "2023 - Archive/3-Nov23.html#this-months-presentation",
    "title": "2023 Nov 2nd – UQ PUG 3",
    "section": "This month’s presentation",
    "text": "This month’s presentation\nOur first guest speaker for PUG will be Nikhil Jangamreddy, please make him feel welcome!\nToday, Nikhil presented about integrating ChatGPT with Python, demonstrating some applications.\nSome interesting tools explored/mentioned - ChatGPT (and the API) - Deeplearning.ai - poe - streamlit - langchain - Mistral - Seminal work: Attention Is All You Need",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Nov 2<sup>nd</sup> -- UQ PUG 3"
    ]
  },
  {
    "objectID": "2023 - Archive/3-Nov23.html#introduce-yourself",
    "href": "2023 - Archive/3-Nov23.html#introduce-yourself",
    "title": "2023 Nov 2nd – UQ PUG 3",
    "section": "Introduce yourself",
    "text": "Introduce yourself\n\n\n\nWhat’s your name?\nWhere are you from?\nWhy are you here?\n\n\n\n\nCameron West\nUQ Library\nTo learn and help\n\n\nKaren Fang\nBusiness School\nTo learn :)\n\n\nNicholas Wiggins\nUQ Library\nLearn and help!\n\n\nNikhil\nEECS UQ\nLearn\n\n\nValentina Urrutia Guada\nUQ Library\nTo learn and help",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Nov 2<sup>nd</sup> -- UQ PUG 3"
    ]
  },
  {
    "objectID": "2023 - Archive/3-Nov23.html#questions",
    "href": "2023 - Archive/3-Nov23.html#questions",
    "title": "2023 Nov 2nd – UQ PUG 3",
    "section": "Questions",
    "text": "Questions\nIf you have any Python questions you’d like to explore with the group, please put them in a markdown cell, with any code you’d like us to run in a Python cell.\n\nQuestion 1 - Model installation Question -Karen\nFail to install the package\nhttps://allenai.github.io/scispacy/\nen_ner_bc5cdr_md\n\nSolution\nSee code below, we can install using the download link.\n\n# Example install\n!pip install https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.5.3/en_ner_bc5cdr_md-0.5.3.tar.gz\n\n\n## How to install modules:\n!pip install #&lt;module url&gt; access this by copying the download link for the module\n\nimport spacy\n\n# Load the spaCy English language model\nnlp = spacy.load('&lt;module name&gt;')\n\n\n\n\nQuestion 2 - Question - Name\nAdd more details here\n\n## Code for Q2\n\n\n\nQuestion 3 - Question - Name\nAdd more details here\n\n## Code for Q3\n\n\n\nQuestion 4 - Question - Name\nAdd more details here\n\n## Code for Q4\n\n\n\nQuestion 5 - Question - Name\nAdd more details here\n\n## Code for Q5\n\n\n\nQuestion 6 - Question - Name\nAdd more details here\n\n## Code for Q6",
    "crumbs": [
      "About us",
      "2023 - Archive",
      "2023 Nov 2<sup>nd</sup> -- UQ PUG 3"
    ]
  }
]